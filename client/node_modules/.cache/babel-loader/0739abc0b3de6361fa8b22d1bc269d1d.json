{"ast":null,"code":"import _classCallCheck from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/uusi/front4/sipuliton/client/src/modules/login/components/Login_Form.js\";\n\n/*\nThis file implements regular login to the application.\n*/\nimport React from 'react';\nimport { Form, FormGroup, Label } from 'reactstrap';\nimport { Auth } from \"aws-amplify\";\nimport { Redirect } from \"react-router-dom\";\nimport config from \"../../../config.js\";\nimport commonComponents from '../../common';\n/* Localization */\n\nimport LocalizedStrings from 'react-localization';\n\nvar Login_Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login_Form, _React$Component);\n\n  function Login_Form(props) {\n    var _this;\n\n    _classCallCheck(this, Login_Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login_Form).call(this, props));\n\n    _this.login = function (event) {\n      /* Logs user in, if password or username\n         is not valid login will automatically fail. */\n      event.preventDefault();\n\n      _this.setState({\n        loggingFailed: false\n      });\n\n      if (_this.state.passwordIsValid && _this.state.usernameIsValid) {\n        Auth.signIn(_this.state.username, _this.state.password).then(function (user) {\n          /* If user needs to set new password this will automatically set old\n             password as a new password and after that tries to log user in. */\n          if (user.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n            user.completeNewPasswordChallenge(_this.state.password).then(function (s) {\n              _this.setState({\n                loggingSucceeded: false\n              });\n\n              Auth.signIn(_this.state.username, _this.state.password).then(function (s) {\n                console.log(user.username + \" logged in!\");\n\n                _this.setState({\n                  loggingSucceeded: true\n                });\n              }).catch(function (e) {\n                _this.setState({\n                  loggingFailed: true\n                });\n              });\n            }).catch(function (err) {\n              return _this.setState({\n                loggingSucceeded: false\n              });\n            });\n          } else {\n            console.log(user.username + \" logged in!\");\n\n            _this.setState({\n              loggingSucceeded: true\n            });\n          }\n        }).catch(function (e) {\n          _this.setState({\n            loggingFailed: true\n          });\n        });\n      } else {\n        _this.setState({\n          loggingFailed: true\n        });\n      }\n    };\n\n    _this.changeUsername = function (event) {\n      /* Implements validation of username */\n      if (event.target.value.length >= config.login.USERNAME_MIN_LENGTH && event.target.value.length <= config.login.USERNAME_MAX_LENGTH) {\n        _this.setState({\n          username: event.target.value,\n          usernameIsValid: true\n        });\n      } else {\n        if (event.target.value.length === 0) {\n          _this.setState({\n            username: event.target.value,\n            usernameIsValid: true\n          });\n        } else {\n          _this.setState({\n            username: event.target.value,\n            usernameIsValid: false\n          });\n        }\n      }\n    };\n\n    _this.changePassword = function (event) {\n      if (event.target.value.length >= config.login.PASSWORD_MIN_LENGTH && event.target.value.length <= config.login.PASSWORD_MAX_LENGTH) {\n        _this.setState({\n          password: event.target.value,\n          passwordIsValid: true\n        });\n      } else {\n        if (event.target.value.length === 0) {\n          _this.setState({\n            password: event.target.value,\n            passwordIsValid: true\n          });\n        } else {\n          _this.setState({\n            password: event.target.value,\n            passwordIsValid: false\n          });\n        }\n      }\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      loggingFailed: false,\n      loggingSucceeded: false,\n      passwordIsValid: true,\n      usernameIsValid: true\n    };\n    return _this;\n  }\n\n  _createClass(Login_Form, [{\n    key: \"render\",\n    value: function render() {\n      var VInput = commonComponents.VInput;\n      var strings = new LocalizedStrings({\n        en: {\n          username: \"Username:\",\n          password: \"Password: \",\n          login: \"Login\",\n          loginfailed: \"Incorrect username or password\"\n        },\n        fi: {\n          username: \"Käyttäjänimi:\",\n          password: \"Salasana: \",\n          login: \"Kirjaudu\",\n          loginfailed: \"Virheellinen käyttäjänimi tai salasana\"\n        }\n      });\n      strings.setLanguage(this.props.language);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.loggingFailed && React.createElement(\"div\", {\n        className: \"errormsg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, strings.loginfailed), React.createElement(Form, {\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, strings.username), React.createElement(VInput, {\n        isValid: this.state.usernameIsValid,\n        value: this.state.username,\n        onChange: this.changeUsername,\n        type: \"text\",\n        name: \"username\",\n        required: true,\n        autoFocus: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, strings.password), React.createElement(VInput, {\n        isValid: this.state.passwordIsValid,\n        value: this.state.password,\n        onChange: this.changePassword,\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(VInput, {\n        type: \"submit\",\n        value: strings.login,\n        className: \"main-btn big-btn max-w-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), this.state.loggingSucceeded && React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login_Form;\n}(React.Component);\n\nexport { Login_Form as default };","map":{"version":3,"sources":["/home/uusi/front4/sipuliton/client/src/modules/login/components/Login_Form.js"],"names":["React","Form","FormGroup","Label","Auth","Redirect","config","commonComponents","LocalizedStrings","Login_Form","props","login","event","preventDefault","setState","loggingFailed","state","passwordIsValid","usernameIsValid","signIn","username","password","then","user","challengeName","completeNewPasswordChallenge","s","loggingSucceeded","console","log","catch","e","err","changeUsername","target","value","length","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","changePassword","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","VInput","strings","en","loginfailed","fi","setLanguage","language","Component"],"mappings":"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","sourcesContent":["/*\nThis file implements regular login to the application.\n*/\n\nimport React from 'react';\nimport {\n\tForm,\n\tFormGroup,\n\tLabel,\n} from 'reactstrap';\n\nimport { Auth } from \"aws-amplify\";\nimport { Redirect } from \"react-router-dom\";\nimport config from \"../../../config.js\"\nimport commonComponents from '../../common'\n\n/* Localization */\nimport LocalizedStrings from 'react-localization';\n\n\nexport default class Login_Form extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      username:\"\",\n      password:\"\",\n      loggingFailed: false,\n      loggingSucceeded:false,\n      passwordIsValid: true,\n      usernameIsValid: true\n    };\n  }\n\n  login = event =>{\n\n   /* Logs user in, if password or username\n      is not valid login will automatically fail. */\n\n      event.preventDefault();\n      this.setState({loggingFailed:false});\n      if(this.state.passwordIsValid && this.state.usernameIsValid){\n        Auth.signIn(this.state.username,this.state.password)\n          .then(user => {\n\n            /* If user needs to set new password this will automatically set old\n               password as a new password and after that tries to log user in. */\n\n            if(user.challengeName === \"NEW_PASSWORD_REQUIRED\"){\n              user.completeNewPasswordChallenge(this.state.password).then(s => {\n                this.setState({loggingSucceeded:false});\n                Auth.signIn(this.state.username,this.state.password).then(s => {\n                  console.log(user.username+\" logged in!\");\n                  this.setState({loggingSucceeded:true});\n                }).catch(e => {this.setState({loggingFailed:true});});\n              }).catch(err => this.setState({loggingSucceeded:false}));\n            }\n            else{\n                console.log(user.username+\" logged in!\");\n                this.setState({loggingSucceeded:true});\n            }\n        })\n        .catch(e => {\n          this.setState({loggingFailed:true});\n        });\n      }\n      else{\n        this.setState({loggingFailed:true});\n      }\n  }\n\n  /*\n  This method implements username validation. This only checks that username is\n  not too short or too long. Lenghts are read from config.js file.\n  */\n  changeUsername = (event) => {\n    /* Implements validation of username */\n    if(event.target.value.length >= config.login.USERNAME_MIN_LENGTH\n      && event.target.value.length <= config.login.USERNAME_MAX_LENGTH){\n      this.setState({username: event.target.value, usernameIsValid: true });\n    }\n    else{\n      if(event.target.value.length === 0){\n        this.setState({username: event.target.value, usernameIsValid: true });\n      }\n      else{\n        this.setState({username: event.target.value, usernameIsValid: false });\n      }\n    }\n  }\n\n  /*\n  This method implements password validation. This only checks that password is\n  not too short or too long. Lenghts are read from config.js file.\n  */\n  changePassword = (event) => {\n    if(event.target.value.length >= config.login.PASSWORD_MIN_LENGTH\n      && event.target.value.length <= config.login.PASSWORD_MAX_LENGTH){\n      this.setState({password: event.target.value, passwordIsValid: true });\n    }\n    else{\n      if(event.target.value.length === 0){\n        this.setState({password: event.target.value, passwordIsValid: true });\n      }\n      else{\n        this.setState({password: event.target.value, passwordIsValid: false });\n      }\n    }\n  }\n\n\n  render() {\n    const { VInput, } = commonComponents;\n    let strings = new LocalizedStrings({\n      en:{\n        username: \"Username:\",\n        password: \"Password: \",\n        login: \"Login\",\n        loginfailed: \"Incorrect username or password\",\n      },\n      fi: {\n        username: \"Käyttäjänimi:\",\n        password: \"Salasana: \",\n        login: \"Kirjaudu\",\n        loginfailed: \"Virheellinen käyttäjänimi tai salasana\",\n      }\n    });\n    strings.setLanguage(this.props.language);\n\n    return (\n      <div>\n        {this.state.loggingFailed && <div className=\"errormsg\">{strings.loginfailed}</div>}\n        <Form onSubmit={this.login}>\n          <FormGroup>\n            <Label>{strings.username}</Label>\n            <VInput isValid={this.state.usernameIsValid} value={this.state.username} onChange={this.changeUsername} type=\"text\" name=\"username\" required autoFocus=\"true\" />\n          </FormGroup>\n          <FormGroup>\n            <Label>{strings.password}</Label>\n            <VInput isValid={this.state.passwordIsValid} value={this.state.password} onChange={this.changePassword} type=\"password\" name=\"password\" required />\n          </FormGroup>\n\n          <VInput type=\"submit\" value={strings.login} className=\"main-btn big-btn max-w-10\" /> \n        </Form>\n        {this.state.loggingSucceeded && <Redirect to=\"/profile\" />}\n      </div>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}