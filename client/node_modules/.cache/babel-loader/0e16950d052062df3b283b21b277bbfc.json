{"ast":null,"code":"import _classCallCheck from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/uusi/front4/sipuliton/client/src/modules/mainmenu/components/LanguageSelection.js\";\nimport React from 'react';\nimport LocalizedStrings from 'react-localization';\nimport LanguageButton from './LanguageButton';\n\nvar LanguageSelection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LanguageSelection, _React$Component);\n\n  function LanguageSelection(props) {\n    var _this;\n\n    _classCallCheck(this, LanguageSelection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LanguageSelection).call(this, props));\n    _this.changeLanguage = _this.changeLanguage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LanguageSelection, [{\n    key: \"changeLanguage\",\n    value: function changeLanguage(language) {\n      this.props.changeLanguage(language);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"language-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(LanguageButton, {\n        language: \"fi\",\n        iconUrl: require(\"../../../resources/suomilippu_logo.ico\"),\n        changeLanguage: this.changeLanguage,\n        title: \"suomi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(LanguageButton, {\n        language: \"en\",\n        iconUrl: require(\"../../../resources/englanninlippu_logo.ico\"),\n        changeLanguage: this.changeLanguage,\n        title: \"English\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LanguageSelection;\n}(React.Component);\n\nexport { LanguageSelection as default };","map":{"version":3,"sources":["/home/uusi/front4/sipuliton/client/src/modules/mainmenu/components/LanguageSelection.js"],"names":["React","LocalizedStrings","LanguageButton","LanguageSelection","props","changeLanguage","bind","language","require","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;IAGqBC,iB;;;;;AACnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AAFiB;AAGlB;;;;mCAEcC,Q,EAAU;AACvB,WAAKH,KAAL,CAAWC,cAAX,CAA0BE,QAA1B;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,QAAQ,EAAC,IADX;AAEE,QAAA,OAAO,EAAEC,OAAO,CAAC,wCAAD,CAFlB;AAGE,QAAA,cAAc,EAAE,KAAKH,cAHvB;AAIE,QAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,cAAD;AACE,QAAA,QAAQ,EAAC,IADX;AAEE,QAAA,OAAO,EAAEG,OAAO,CAAC,4CAAD,CAFlB;AAGE,QAAA,cAAc,EAAE,KAAKH,cAHvB;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAgBD;;;;EA3B4CL,KAAK,CAACS,S;;SAAhCN,iB","sourcesContent":["import React from 'react';\nimport LocalizedStrings from 'react-localization';\n\nimport LanguageButton from './LanguageButton';\n\n\nexport default class LanguageSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeLanguage = this.changeLanguage.bind(this);\n  }\n\n  changeLanguage(language) {\n    this.props.changeLanguage(language);\n  }\n\n  render() {\n    return (\n      <div className=\"language-container\">\n        <LanguageButton\n          language=\"fi\"\n          iconUrl={require(\"../../../resources/suomilippu_logo.ico\")}\n          changeLanguage={this.changeLanguage}\n          title=\"suomi\"\n        />\n        <LanguageButton\n          language=\"en\"\n          iconUrl={require(\"../../../resources/englanninlippu_logo.ico\")}\n          changeLanguage={this.changeLanguage}\n          title=\"English\"\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}