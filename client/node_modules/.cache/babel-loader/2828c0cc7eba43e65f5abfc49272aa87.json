{"ast":null,"code":"import _classCallCheck from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/uusi2/dev-sip/sipuliton/client/src/modules/home/components/Events.js\";\n\n/*\n\n  This file contains the events(restaurants) that are show on the landing page below the search bar\n\n*/\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../../../styles/landingpage.css';\n\nvar Events =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Events, _React$Component);\n\n  function Events(props) {\n    var _this;\n\n    _classCallCheck(this, Events);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Events).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      restaurants: []\n    };\n    return _this;\n  }\n  /** Once the object has been added to the tree, load up the data from the server **/\n\n\n  _createClass(Events, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"DEBUG: ComponentsDidMount entered\");\n      fetch(\"http://localhost:3000/landing\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(\"DEBUG: ComponentsDidMount success\");\n        console.log(result);\n\n        _this2.setState({\n          isLoaded: true,\n          restaurants: result.restaurants\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        console.log(\"DEBUG: ComponentsDidMount error\");\n        console.log(error);\n\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    } //Prints out how many stars the restaurant has\n\n  }, {\n    key: \"renderStars\",\n    value: function renderStars(starCount) {\n      //console.log(\"DEBUG: Starcount\");\n      //console.log(starCount);\n      var starIcons = [];\n\n      while (starCount >= 1) {\n        starIcons.push(React.createElement(FontAwesomeIcon, {\n          icon: \"star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }));\n        starCount = starCount - 1;\n      } //console.log(starCount);\n\n\n      if (starCount >= 0.5) {\n        starIcons.push(React.createElement(FontAwesomeIcon, {\n          icon: \"star-half\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        })); //console.log(\"Half star added\");\n      } //console.log(starIcons);\n\n\n      return starIcons;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          restaurants = _this$state.restaurants;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          className: \"eventsDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"event\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Error: \", error.message));\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          className: \"eventsDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"event\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Ladataan ehdotuksia...\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"eventsDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \" Ravintoloita joista voisit olla kiinnostunut: \"), restaurants.map(function (restaurant) {\n          return React.createElement(\"div\", {\n            className: \"event\",\n            key: restaurant.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, restaurant.name, \" \", _this3.renderStars(restaurant.rating_overall), \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }), restaurant.street_address);\n        }));\n      }\n    }\n  }]);\n\n  return Events;\n}(React.Component);\n\nexport default Events;","map":{"version":3,"sources":["/home/uusi2/dev-sip/sipuliton/client/src/modules/home/components/Events.js"],"names":["React","FontAwesomeIcon","Events","props","state","error","isLoaded","restaurants","console","log","fetch","then","res","json","result","setState","starCount","starIcons","push","message","map","restaurant","name","renderStars","rating_overall","street_address","Component"],"mappings":"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","sourcesContent":["/*\n\n  This file contains the events(restaurants) that are show on the landing page below the search bar\n\n*/\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../../../styles/landingpage.css';\n\nclass Events extends React.Component {  \n  \nconstructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      restaurants: []\n    };\n  }\n  \n  /** Once the object has been added to the tree, load up the data from the server **/\n  componentDidMount() {\n    console.log(\"DEBUG: ComponentsDidMount entered\");\n    \n    fetch(\"http://localhost:3000/landing\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(\"DEBUG: ComponentsDidMount success\");\n          console.log(result);\n          this.setState({\n            isLoaded: true,\n            restaurants: result.restaurants\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(\"DEBUG: ComponentsDidMount error\");\n          console.log(error);\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  \n  //Prints out how many stars the restaurant has\n  renderStars(starCount)\n  {\n    //console.log(\"DEBUG: Starcount\");\n    //console.log(starCount);\n    \n    const starIcons = [];\n    while(starCount >= 1)\n    {\n      starIcons.push(<FontAwesomeIcon icon=\"star\" />);\n      starCount = starCount - 1;\n    }\n    //console.log(starCount);\n    if(starCount >= 0.5)\n    {\n      starIcons.push(<FontAwesomeIcon icon=\"star-half\" />);\n      //console.log(\"Half star added\");\n    }\n    //console.log(starIcons);\n    return starIcons\n  }\n  \n  render() {\n    \n    const { error, isLoaded, restaurants } = this.state;\n    \n    if (error) {\n      \n      return (\n        <div className=\"eventsDiv\"> \n          <div className=\"event\">\n            Error: {error.message}\n          </div>\n        </div>\n      );\n      \n    } else if (!isLoaded) {\n      \n      return (\n        <div className=\"eventsDiv\"> \n          <div className=\"event\">\n            Ladataan ehdotuksia...\n          </div>\n        </div>\n      );\n      \n    } else {\n      return (\n         <div className=\"eventsDiv\"> \n          <h3> Ravintoloita joista voisit olla kiinnostunut: </h3>\n          {restaurants.map((restaurant) =>\n            <div className=\"event\" key={restaurant.name} >\n            {restaurant.name} {this.renderStars(restaurant.rating_overall)} <br/>\n            {restaurant.street_address}\n            </div>\n          )}      \n        </div>\n      );\n      \n    }\n  }\n  \n}\n\nexport default Events;"]},"metadata":{},"sourceType":"module"}