{"ast":null,"code":"import _classCallCheck from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/uusi2/dev-sip/sipuliton/client/src/modules/home/components/SearchBar.js\";\n\n/*\n\n  This file contains the search bar functionality, as well as filter system.\n\n*/\nimport React from 'react';\nimport { Button, UncontrolledTooltip, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../../../styles/landingpage.css';\n/* Localization */\n\nimport LocalizedStrings from 'react-localization';\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar(props, context) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props, context)); //Bind the functions\n\n    _this.doSearch = function (event) {\n      event.preventDefault();\n      console.log(\"Doing search\"); //First, split off various keywords. Separator is ','\n\n      var searchTerms = _this.state.keywords.split(','); //Remove whitespaces\n\n\n      for (var i = 0; i < searchTerms.length; i++) {\n        searchTerms[i] = searchTerms[i].trim();\n      } //Console log test to se that we got what we wanted\n\n\n      console.log(\"Search terms: \");\n      console.log(searchTerms);\n      console.log(\"Filters: \");\n      console.log(_this.state.filters);\n      var results = [{\n        name: 'Search Result 1',\n        rating_overall: 3,\n        street_address: \"Katu 1\"\n      }, {\n        name: 'Search Result 2',\n        rating_overall: 4,\n        street_address: \"Katu 2\"\n      }, {\n        name: 'Search Result 3',\n        rating_overall: 3.7,\n        street_address: \"Katu 3\"\n      }, {\n        name: 'Search Result 4',\n        rating_overall: 5,\n        street_address: \"Katu 4\"\n      }, {\n        name: 'Search Result 5',\n        rating_overall: 2.2,\n        street_address: \"Katu 5\"\n      }, {\n        name: 'Search Result 6',\n        rating_overall: 3.3,\n        street_address: \"Katu 6\"\n      }];\n      console.log(\"Sending results\");\n      console.log(results); //Send data via props\n\n      _this.props.onSearchDone(results);\n    };\n\n    _this.togglePopover = _this.togglePopover.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.doSearch = _this.doSearch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getDefaultValues = _this.getDefaultValues.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getOptions = _this.getOptions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleKeywordChange = _this.handleKeywordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFilterChange = _this.handleFilterChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isLoading: true,\n      loadedDefaults: false,\n      loadedOptions: false,\n      popoverOpen: false,\n      filters: [],\n      keywords: '',\n      options: [],\n      defaultValues: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        options: this.getOptions(),\n        defaultValue: this.getDefaultValues()\n      });\n    } //Toggles popover\n\n  }, {\n    key: \"togglePopover\",\n    value: function togglePopover() {\n      this.setState({\n        popoverOpen: !this.state.popoverOpen\n      });\n      console.log(\"Toggling popover, new state is: \" + this.state.popoverOpen);\n    } //Actual search event. It also sends signal to the parent by using props.SearchDone, which signals it has done a search and this.props.searchResults which has the results\n\n  }, {\n    key: \"getDefaultValues\",\n    //Get the default selections. Mainly checks if user is logged in if is, then get the data\n    value: function getDefaultValues() {\n      var defaultValues = [];\n      this.setState({\n        loadedDefaults: true\n      });\n      return defaultValues;\n    } //This gets the options for the selection.\n\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      var options = [{\n        value: 'onions',\n        label: 'Allergia/Sipuli'\n      }, {\n        value: 'tomato',\n        label: 'Allergia/Tomaatti'\n      }, {\n        value: 'nuts',\n        label: 'Allergia/Pähkinä'\n      }, {\n        value: 'lactose',\n        label: 'Laktoositon ruokavalio'\n      }, {\n        value: 'coeliac ',\n        label: 'Keliakia'\n      }];\n      console.log(\"Getting the options: \");\n      console.log(options);\n      this.state.loadedOptions = true;\n      this.setState({\n        loadedOptions: true\n      });\n      return options;\n    }\n  }, {\n    key: \"renderFilterButton\",\n    value: function renderFilterButton() {\n      if (this.state.loadedDefaults && this.state.loadedOptions) {\n        return React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"searchBtn\",\n          onClick: this.doSearch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: \"search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }));\n      } else {\n        return \"Ladataan tietoja...\";\n      }\n    } //Used for the keyword change\n\n  }, {\n    key: \"handleKeywordChange\",\n    value: function handleKeywordChange(event) {\n      //console.log(\"Changing selected keywords\");\n      this.setState({\n        keywords: event.target.value\n      }); //console.log(event.target.value);\n      //console.log(this.state.keywords);\n    } //Used to acknowledge change and store new values\n\n  }, {\n    key: \"handleFilterChange\",\n    value: function handleFilterChange(selectedOptions) {\n      //console.log(\"Changing selected filters\");\n      this.setState({\n        filters: selectedOptions\n      }); //console.log(selectedOptions);\n      //console.log(this.state.filters);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /* Localization */\n      var strings = new LocalizedStrings({\n        en: {\n          search: \"Search...\",\n          usecommaasaseparator: \"Use comma ( , ) as a separator.\",\n          filter: \"Filter\",\n          includeinsearch: \"Include in search:\"\n        },\n        fi: {\n          search: \"Hae...\",\n          usecommaasaseparator: \"Käytä pilkkua ( , ) erottimena.\",\n          filter: \"Rajaa\",\n          includeinsearch: \"Sisällytä hakuun:\"\n        }\n      });\n\n      if (typeof this.props.language !== 'undefined') {\n        strings.setLanguage(this.props.language);\n      } else {\n        strings.setLanguage('fi');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"searchDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"search-form\",\n        className: \"search\",\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.keywords,\n        onChange: this.handleKeywordChange,\n        className: \"round\",\n        placeholder: strings.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"searchBtn\",\n        onClick: this.doSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"instructions\",\n        id: \"instructions-symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \" ??? \"), React.createElement(UncontrolledTooltip, {\n        placement: \"right\",\n        target: \"instructions-symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, strings.usecommaasaseparator), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"filterBtn\",\n        id: \"filter_popover\",\n        onClick: this.togglePopover,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, strings.filter), React.createElement(Popover, {\n        placement: \"bottom\",\n        isOpen: this.state.popoverOpen,\n        target: \"filter_popover\",\n        toggle: this.togglePopover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(PopoverHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, strings.includeinsearch, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(Select, {\n        defaultValue: this.state.defaultValues,\n        isMulti: true,\n        name: \"filtersDrop\",\n        options: this.state.options,\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        onChange: this.handleFilterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/uusi2/dev-sip/sipuliton/client/src/modules/home/components/SearchBar.js"],"names":["React","Button","UncontrolledTooltip","Popover","PopoverBody","PopoverHeader","Select","FontAwesomeIcon","styles","LocalizedStrings","SearchBar","props","context","doSearch","event","preventDefault","console","log","searchTerms","state","keywords","split","i","length","trim","filters","results","name","rating_overall","street_address","onSearchDone","togglePopover","bind","getDefaultValues","getOptions","handleKeywordChange","handleFilterChange","isLoading","loadedDefaults","loadedOptions","popoverOpen","options","defaultValues","setState","defaultValue","value","label","target","selectedOptions","strings","en","search","usecommaasaseparator","filter","includeinsearch","fi","language","setLanguage","login","Component"],"mappings":"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","sourcesContent":["/*\n\n  This file contains the search bar functionality, as well as filter system.\n\n*/\n\nimport React from 'react';\nimport { Button, UncontrolledTooltip, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../../../styles/landingpage.css';\n\n/* Localization */\nimport LocalizedStrings from 'react-localization';\n\nclass SearchBar extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    //Bind the functions\n    this.togglePopover = this.togglePopover.bind(this);\n    this.doSearch = this.doSearch.bind(this);\n    this.getDefaultValues = this.getDefaultValues.bind(this);\n    this.getOptions = this.getOptions.bind(this);\n    this.handleKeywordChange = this.handleKeywordChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n\n    this.state = {\n      isLoading: true,\n      loadedDefaults: false,\n      loadedOptions: false,\n      popoverOpen: false,\n      filters : [],\n      keywords : '',\n      options : [],\n      defaultValues : []\n    };\n  }\n\n  componentDidMount() {\n\n    this.setState({\n      options : this.getOptions(),\n      defaultValue : this.getDefaultValues()\n    });\n\n  }\n\n  //Toggles popover\n  togglePopover() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    });\n    console.log(\"Toggling popover, new state is: \" + this.state.popoverOpen);\n  }\n\n  //Actual search event. It also sends signal to the parent by using props.SearchDone, which signals it has done a search and this.props.searchResults which has the results\n  doSearch  = event =>{\n\n      event.preventDefault();\n\n      console.log(\"Doing search\")\n      //First, split off various keywords. Separator is ','\n      var searchTerms = this.state.keywords.split(',');\n      //Remove whitespaces\n      for( var i = 0; i < searchTerms.length; i++)\n      {\n        searchTerms[i] = searchTerms[i].trim();\n      }\n\n\n\n      //Console log test to se that we got what we wanted\n      console.log(\"Search terms: \");\n      console.log(searchTerms);\n      console.log(\"Filters: \");\n      console.log(this.state.filters);\n\n      const results = [\n        { name: 'Search Result 1', rating_overall: 3,   street_address : \"Katu 1\" },\n        { name: 'Search Result 2', rating_overall: 4,   street_address : \"Katu 2\" },\n        { name: 'Search Result 3', rating_overall: 3.7, street_address : \"Katu 3\" },\n        { name: 'Search Result 4', rating_overall: 5,   street_address : \"Katu 4\" },\n        { name: 'Search Result 5', rating_overall: 2.2, street_address : \"Katu 5\" },\n        { name: 'Search Result 6', rating_overall: 3.3, street_address : \"Katu 6\" },\n      ];\n\n      console.log(\"Sending results\");\n      console.log(results);\n\n      //Send data via props\n      this.props.onSearchDone( results );\n\n  }\n\n\n  //Get the default selections. Mainly checks if user is logged in if is, then get the data\n  getDefaultValues() {\n\n    const defaultValues = [];\n    this.setState({\n      loadedDefaults : true\n    });\n    return defaultValues;\n  }\n\n  //This gets the options for the selection.\n  getOptions() {\n\n    const options = [\n      { value: 'onions', label: 'Allergia/Sipuli' },\n      { value: 'tomato', label: 'Allergia/Tomaatti' },\n      { value: 'nuts', label: 'Allergia/Pähkinä' },\n      { value: 'lactose', label: 'Laktoositon ruokavalio' },\n      { value: 'coeliac ', label: 'Keliakia' }\n    ];\n    console.log(\"Getting the options: \");\n    console.log(options);\n\n    this.state.loadedOptions = true;\n\n    this.setState({\n      loadedOptions : true\n    });\n\n    return options;\n  }\n\n  renderFilterButton()\n  {\n    if( this.state.loadedDefaults && this.state.loadedOptions) {\n      return (\n        <button type=\"submit\" className=\"searchBtn\" onClick={this.doSearch}>\n          <FontAwesomeIcon icon=\"search\" />\n        </button>\n      );\n    }\n    else {\n      return (\n        \"Ladataan tietoja...\"\n      );\n    }\n\n  }\n\n  //Used for the keyword change\n  handleKeywordChange(event) {\n    //console.log(\"Changing selected keywords\");\n    this.setState({keywords: event.target.value});\n    //console.log(event.target.value);\n    //console.log(this.state.keywords);\n  }\n\n  //Used to acknowledge change and store new values\n  handleFilterChange(selectedOptions) {\n    //console.log(\"Changing selected filters\");\n    this.setState({\n      filters : selectedOptions\n    });\n    //console.log(selectedOptions);\n    //console.log(this.state.filters);\n  }\n\n  render() {\n\n    /* Localization */\n    let strings = new LocalizedStrings({\n      en:{\n        search:\"Search...\",\n        usecommaasaseparator:\"Use comma ( , ) as a separator.\",\n        filter:\"Filter\",\n        includeinsearch:\"Include in search:\",\n      },\n      fi: {\n        search:\"Hae...\",\n        usecommaasaseparator:\"Käytä pilkkua ( , ) erottimena.\",\n        filter:\"Rajaa\",\n        includeinsearch:\"Sisällytä hakuun:\"\n      }\n    });\n    if(typeof this.props.language !== 'undefined'){\n      strings.setLanguage(this.props.language);\n    }\n    else{\n      strings.setLanguage('fi');\n    }\n\n\n    return (\n      <div className=\"searchDiv\">\n        <form id=\"search-form\" className=\"search\" onSubmit={this.login}>\n\n          <input type=\"text\" value={this.state.keywords} onChange={this.handleKeywordChange} className=\"round\" placeholder={strings.search} />\n           <button type=\"submit\" className=\"searchBtn\" onClick={this.doSearch}>\n              <FontAwesomeIcon icon=\"search\" />\n          </button>\n\n          <span className=\"instructions\" id=\"instructions-symbol\"> ??? </span>\n           <UncontrolledTooltip placement=\"right\" target=\"instructions-symbol\">\n            {strings.usecommaasaseparator}\n          </UncontrolledTooltip>\n\n          <br />\n\n          <button className=\"filterBtn\" id=\"filter_popover\" onClick={this.togglePopover} type=\"button\" >{strings.filter}</button>\n\n          <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"filter_popover\" toggle={this.togglePopover}>\n            <PopoverHeader></PopoverHeader>\n            <PopoverBody>\n              {strings.includeinsearch} <br />\n              <Select\n                defaultValue={ this.state.defaultValues }\n                isMulti\n                name=\"filtersDrop\"\n                options={ this.state.options }\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={this.handleFilterChange}\n              />\n            </PopoverBody>\n          </Popover>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}