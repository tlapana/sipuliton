{"ast":null,"code":"import _objectWithoutProperties from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/uusi/front4/sipuliton/client/src/modules/common/components/VInput.js\";\nimport React from 'react';\nimport { Input } from 'reactstrap';\n/* \n An input that simplifies validation. \n Use \"isValid\" prop as a variable (true/false) or a function. \n If \"isValid\" is used as a function, it should have 0 arguments or \n 1 argument (which is the value of the input).\n*/\n\nvar VInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VInput, _React$Component);\n\n  function VInput(props) {\n    _classCallCheck(this, VInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VInput).call(this, props));\n  }\n\n  _createClass(VInput, [{\n    key: \"isString\",\n    value: function isString(value) {\n      return typeof value === 'string' || value instanceof String;\n    }\n  }, {\n    key: \"checkIfValid\",\n    value: function checkIfValid(isValid, value) {\n      if (isValid != null) {\n        if (typeof isValid === 'function') {\n          if (isValid.length === 0 && !isValid()) {\n            return false;\n          } else if (isValid.length === 1 && !isValid(value)) {\n            return false;\n          }\n        } else if (this.isString(isValid) && isValid.toLowerCase() === 'false') {\n          return false;\n        } else if (!isValid) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isValid = _this$props.isValid,\n          className = _this$props.className,\n          value = _this$props.value,\n          type = _this$props.type,\n          other = _objectWithoutProperties(_this$props, [\"isValid\", \"className\", \"value\", \"type\"]);\n\n      var valid = this.checkIfValid(isValid, value);\n\n      if (!valid) {\n        if (type === \"submit\") {\n          return React.createElement(Input, Object.assign({}, other, {\n            value: value,\n            type: type,\n            className: className,\n            disabled: \"true\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }));\n        } else {\n          className += ' invalid';\n        }\n      }\n\n      return React.createElement(Input, Object.assign({}, other, {\n        value: value,\n        type: type,\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return VInput;\n}(React.Component);\n\nexport { VInput as default };","map":{"version":3,"sources":["/home/uusi/front4/sipuliton/client/src/modules/common/components/VInput.js"],"names":["React","Input","VInput","props","value","String","isValid","length","isString","toLowerCase","className","type","other","valid","checkIfValid","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAuB,YAAvB;AAEA;;;;;;;IAMqBC,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+EACXA,KADW;AAElB;;;;6BAEQC,K,EAAO;AACd,aAAQ,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYC,MAAtD;AACD;;;iCAEYC,O,EAASF,K,EAAO;AAC3B,UAAIE,OAAO,IAAI,IAAf,EAAqB;AACnB,YAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjC,cAAIA,OAAO,CAACC,MAAR,KAAmB,CAAnB,IAAwB,CAACD,OAAO,EAApC,EAAwC;AACtC,mBAAO,KAAP;AACD,WAFD,MAGK,IAAIA,OAAO,CAACC,MAAR,KAAmB,CAAnB,IAAwB,CAACD,OAAO,CAACF,KAAD,CAApC,EAA6C;AAChD,mBAAO,KAAP;AACD;AACF,SAPD,MAQK,IAAI,KAAKI,QAAL,CAAcF,OAAd,KAA0BA,OAAO,CAACG,WAAR,OAA0B,OAAxD,EAAiE;AAClE,iBAAO,KAAP;AACH,SAFI,MAGA,IAAI,CAACH,OAAL,EAAc;AACjB,iBAAO,KAAP;AACD;AACF;;AAED,aAAO,IAAP;AACD;;;6BAEQ;AAAA,wBAC6C,KAAKH,KADlD;AAAA,UACDG,OADC,eACDA,OADC;AAAA,UACQI,SADR,eACQA,SADR;AAAA,UACmBN,KADnB,eACmBA,KADnB;AAAA,UAC0BO,IAD1B,eAC0BA,IAD1B;AAAA,UACmCC,KADnC;;AAEP,UAAMC,KAAK,GAAG,KAAKC,YAAL,CAAkBR,OAAlB,EAA2BF,KAA3B,CAAd;;AAEA,UAAI,CAACS,KAAL,EAAY;AACV,YAAIF,IAAI,KAAK,QAAb,EAAuB;AACrB,iBACE,oBAAC,KAAD,oBACMC,KADN;AAEE,YAAA,KAAK,EAAER,KAFT;AAGE,YAAA,IAAI,EAAEO,IAHR;AAIE,YAAA,SAAS,EAAED,SAJb;AAKE,YAAA,QAAQ,EAAC,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AASD,SAVD,MAWK;AACHA,UAAAA,SAAS,IAAI,UAAb;AACD;AACF;;AAED,aACE,oBAAC,KAAD,oBACME,KADN;AAEE,QAAA,KAAK,EAAER,KAFT;AAGE,QAAA,IAAI,EAAEO,IAHR;AAIE,QAAA,SAAS,EAAED,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQD;;;;EA3DiCV,KAAK,CAACe,S;;SAArBb,M","sourcesContent":["import React from 'react'\nimport { Input, } from 'reactstrap';\n\n/* \n An input that simplifies validation. \n Use \"isValid\" prop as a variable (true/false) or a function. \n If \"isValid\" is used as a function, it should have 0 arguments or \n 1 argument (which is the value of the input).\n*/\nexport default class VInput extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  isString(value) {\n    return (typeof value === 'string' || value instanceof String)\n  }\n\n  checkIfValid(isValid, value) {\n    if (isValid != null) {\n      if (typeof isValid === 'function') {\n        if (isValid.length === 0 && !isValid()) {\n          return false;\n        }\n        else if (isValid.length === 1 && !isValid(value)) {\n          return false;\n        }\n      }\n      else if (this.isString(isValid) && isValid.toLowerCase() === 'false') {\n          return false;\n      }\n      else if (!isValid) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    var { isValid, className, value, type, ...other } = this.props;\n    const valid = this.checkIfValid(isValid, value);\n    \n    if (!valid) {\n      if (type === \"submit\") {\n        return (\n          <Input\n            {...other}\n            value={value}\n            type={type}\n            className={className}\n            disabled=\"true\"\n          />\n        )\n      }\n      else {\n        className += ' invalid';\n      }\n    }\n\n    return (\n      <Input\n        {...other}\n        value={value}\n        type={type}\n        className={className}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}