{"ast":null,"code":"import _classCallCheck from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/uusi/front4/sipuliton/client/src/modules/app/components/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport RouteCollection from './RouteCollection';\nimport NavigationBar from './NavigationBar';\nimport '../../../styles/app.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  /* Constructor of the navication bar class. */\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      theme: 'theme-1'\n    };\n    _this.changeTheme = _this.changeTheme.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"changeTheme\",\n    value: function changeTheme(theme) {\n      // TODO: this can be used later to add theme support\n      this.setState({\n        theme: theme\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = 'app ' + this.state.theme;\n\n      if (this.props.isLoading) {\n        classes += ' loading';\n      }\n\n      return React.createElement(Provider, {\n        store: this.props.store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(RouteCollection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))), React.createElement(NavigationBar, {\n        header_text: \"Sipuliton.fi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired\n};\nexport default App;","map":{"version":3,"sources":["/home/uusi/front4/sipuliton/client/src/modules/app/components/App.js"],"names":["React","PropTypes","Provider","BrowserRouter","Router","Switch","Container","RouteCollection","NavigationBar","App","props","state","theme","changeTheme","bind","setState","classes","isLoading","store","Component","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,QAAgD,kBAAhD;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,yBAAP;;IAGMC,G;;;;;AACJ;AACA,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACdC,MAAAA,KAAK,EAAE;AADO,KAAb;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAPiB;AAQlB;;;;gCAEWF,K,EAAO;AACjB;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACD;;;6BAEQ;AACP,UAAII,OAAO,GAAG,SAAS,KAAKL,KAAL,CAAWC,KAAlC;;AACA,UAAI,KAAKF,KAAL,CAAWO,SAAf,EAA0B;AACxBD,QAAAA,OAAO,IAAI,UAAX;AACD;;AAED,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWQ,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEF,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,aAAD;AAAe,QAAA,WAAW,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CADF,CADF,CADF;AAgBD;;;;EAvCehB,KAAK,CAACmB,S;;AA2CxBV,GAAG,CAACW,SAAJ,GAAgB;AACdF,EAAAA,KAAK,EAAEjB,SAAS,CAACoB,MAAV,CAAiBC;AADV,CAAhB;AAIA,eAAeb,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Container } from 'reactstrap';\n\nimport RouteCollection from './RouteCollection';\nimport NavigationBar from './NavigationBar';\n\nimport '../../../styles/app.css';\n\n\nclass App extends React.Component {\n  /* Constructor of the navication bar class. */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t\t\ttheme: 'theme-1',\n    };\n\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n\n  changeTheme(theme) {\n    // TODO: this can be used later to add theme support\n    this.setState({theme: theme});\n  }\n\n  render() {\n    let classes = 'app ' + this.state.theme;\n    if (this.props.isLoading) {\n      classes += ' loading';\n    }\n\n    return(\n      <Provider store={this.props.store}>\n        <Router>\n          <div className={classes}>\n            <div className=\"content\">\n              <Container className=\"main-content\" >\n                <Switch>\n                  <RouteCollection/>\n                </Switch>\n              </Container>\n              <NavigationBar header_text=\"Sipuliton.fi\"/>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n\n}\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}