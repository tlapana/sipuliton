{"ast":null,"code":"import _classCallCheck from \"/home/uusi2/sipuliton-dev/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi2/sipuliton-dev/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi2/sipuliton-dev/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi2/sipuliton-dev/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi2/sipuliton-dev/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/uusi2/sipuliton-dev/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/uusi2/sipuliton-dev/client/src/modules/login/components/Social_Login.js\";\n\n/* global gapi */\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './styles.css';\nimport { Auth } from \"aws-amplify\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport config from \"../../../config.js\"; //Login for Google accounts\n\nvar SocialLogin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SocialLogin, _React$Component);\n\n  function SocialLogin(props) {\n    var _this;\n\n    _classCallCheck(this, SocialLogin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SocialLogin).call(this, props));\n    _this.state = {\n      loggingFailed: false,\n      loggingSucceeded: false\n    };\n    _this.setState = _this.setState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //What to do in case of successful response from Google\n\n\n  _createClass(SocialLogin, [{\n    key: \"responseGoogle\",\n    value: function responseGoogle(response) {\n      console.log(\"DEBUG: RESPONSE FROM GOOGLE ON SUCCESS\");\n      console.log(response);\n      var that = this; //const googleID = response.googleId; //Might not need this    \n\n      var token = response.tokenObj.id_token;\n      var expires = response.tokenObj.expires_at;\n      console.log(\"IMPORTANT DATA:\");\n      console.log(\"TOKEN: \" + token);\n      console.log(\"EXPIRES: \" + expires); //Authenticate at Cognito\n\n      Auth.federatedSignIn('google', {\n        token: token,\n        expires_at: expires\n      }, {\n        name: \"USER_NAME\"\n      }).then(function (credentials) {\n        console.log(\"Auth.federatedSignIn SUCCESS\");\n        console.log('get aws credentials', credentials); //this.setState({loggingSucceeded:true});\n      }).catch(function (e) {\n        //this.setState({loggingFailed:true});\n        console.log(\"Auth.federatedSignIn ERROR\");\n        console.log(e);\n      });\n    } //What to do in case of successful response from Facebook\n\n  }, {\n    key: \"responseFacebookSuccess\",\n    value: function responseFacebookSuccess(response) {\n      console.log(\"DEBUG: RESPONSE FROM FACEBOOK ON SUCCESS\");\n      console.log(response);\n      var token = response.accessToken;\n      var expires = response.expiresIn;\n      console.log(\"IMPORTANT DATA:\");\n      console.log(\"TOKEN: \" + token);\n      console.log(\"EXPIRES: \" + expires);\n      Auth.federatedSignIn('facebook', {\n        token: token,\n        expires_at: expires\n      }, {\n        name: \"USER_NAME\"\n      }).then(function (credentials) {\n        console.log(\"Auth.federatedSignIn SUCCESS\");\n        console.log('get aws credentials', credentials); //this.setState({loggingSucceeded:true});\n      }).catch(function (e) {\n        //this.setState({loggingFailed:true});\n        console.log(\"Auth.federatedSignIn ERROR\");\n        console.log(e);\n      });\n    } //General failure reaction\n\n  }, {\n    key: \"responseFailure\",\n    value: function responseFailure(response) {\n      console.log(\"DEBUG: RESPONSE ON FAILURE\");\n      console.log(response);\n      this.setState({\n        loggingFailed: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var federated = {\n        google_client_id: config.google.CLIENT_ID,\n        facebook_app_id: '',\n        amazon_client_id: ''\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(GoogleLogin, {\n        clientId: config.google.CLIENT_ID,\n        responseType: \"id_token\",\n        onSuccess: this.responseGoogle,\n        onFailure: this.responseFailure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Google+\"), React.createElement(FacebookLogin, {\n        appId: config.facebook.APP_ID,\n        fields: \"name,email,picture\",\n        onClick: this.facebookClicked,\n        callback: this.responseFacebookSuccess,\n        onFailure: this.responseFailure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Facebook\"));\n    }\n  }]);\n\n  return SocialLogin;\n}(React.Component);\n\nexport { SocialLogin as default };","map":{"version":3,"sources":["/home/uusi2/sipuliton-dev/client/src/modules/login/components/Social_Login.js"],"names":["React","Button","FontAwesomeIcon","styles","Auth","Link","Redirect","GoogleLogin","FacebookLogin","config","SocialLogin","props","state","loggingFailed","loggingSucceeded","setState","bind","response","console","log","that","token","tokenObj","id_token","expires","expires_at","federatedSignIn","name","then","credentials","catch","e","accessToken","expiresIn","federated","google_client_id","google","CLIENT_ID","facebook_app_id","amazon_client_id","responseGoogle","responseFailure","facebook","APP_ID","facebookClicked","responseFacebookSuccess","Component"],"mappings":"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","sourcesContent":["/* global gapi */\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './styles.css'\n\nimport { Auth } from \"aws-amplify\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login'\n\nimport config from \"../../../config.js\"\n\n//Login for Google accounts\nexport default class SocialLogin extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      loggingFailed: false,\n      loggingSucceeded:false,\n    };\n    this.setState = this.setState.bind(this);\n  }\n  \n  \n  //What to do in case of successful response from Google\n  responseGoogle(response) {\n    console.log(\"DEBUG: RESPONSE FROM GOOGLE ON SUCCESS\")\n    console.log(response);\n    var that = this;\n    //const googleID = response.googleId; //Might not need this    \n    const token = response.tokenObj.id_token;\n    const expires = response.tokenObj.expires_at;\n    \n    console.log(\"IMPORTANT DATA:\");\n    console.log(\"TOKEN: \" + token);\n    console.log(\"EXPIRES: \" + expires)\n    \n    //Authenticate at Cognito\n    Auth.federatedSignIn('google', { token, expires_at : expires}, { name: \"USER_NAME\" })\n      .then(credentials => {\n        console.log(\"Auth.federatedSignIn SUCCESS\")\n        console.log('get aws credentials', credentials);\n        //this.setState({loggingSucceeded:true});\n      }).catch(e => {\n          \n        //this.setState({loggingFailed:true});\n        console.log(\"Auth.federatedSignIn ERROR\")\n        console.log(e);\n      });\n    \n  }\n  \n  //What to do in case of successful response from Facebook\n  responseFacebookSuccess(response) {\n    console.log(\"DEBUG: RESPONSE FROM FACEBOOK ON SUCCESS\")\n    console.log(response);\n    \n    const token = response.accessToken;\n    const expires = response.expiresIn;\n    \n    console.log(\"IMPORTANT DATA:\");\n    console.log(\"TOKEN: \" + token);\n    console.log(\"EXPIRES: \" + expires)\n    \n    Auth.federatedSignIn('facebook', { token, expires_at : expires}, { name: \"USER_NAME\" })\n      .then(credentials => {\n        console.log(\"Auth.federatedSignIn SUCCESS\")\n        console.log('get aws credentials', credentials);\n        //this.setState({loggingSucceeded:true});\n      }).catch(e => {\n          \n        //this.setState({loggingFailed:true});\n        console.log(\"Auth.federatedSignIn ERROR\")\n        console.log(e);\n      });\n    \n    \n  }\n  \n  //General failure reaction\n  responseFailure(response){\n    console.log(\"DEBUG: RESPONSE ON FAILURE\")\n    console.log(response);\n    this.setState({loggingFailed:true});\n  }\n   \n  render() {  \n\n    const federated = {\n    google_client_id: config.google.CLIENT_ID,\n    facebook_app_id: '',\n    amazon_client_id: ''\n};\n    return (\n      <div>\n        <GoogleLogin\n          clientId={config.google.CLIENT_ID}\n          responseType=\"id_token\"\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseFailure}\n        >\n          Google+\n        </GoogleLogin>\n        <FacebookLogin\n          appId={config.facebook.APP_ID}\n          fields=\"name,email,picture\"\n          onClick={this.facebookClicked}\n          callback={this.responseFacebookSuccess}\n          onFailure={this.responseFailure}\n        >\n          Facebook\n        </FacebookLogin>\n      </div>\n    );\n  }  \n}"]},"metadata":{},"sourceType":"module"}