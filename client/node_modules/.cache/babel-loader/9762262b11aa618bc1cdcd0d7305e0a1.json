{"ast":null,"code":"import _classCallCheck from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi2/dev-sip/sipuliton/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/uusi2/dev-sip/sipuliton/client/src/modules/login/components/Login_Form.js\";\n\n/*\nThis file implements regular login to the application.\n*/\nimport React from 'react';\nimport { NavItem, NavLink, form, Button } from 'reactstrap';\nimport { Auth } from \"aws-amplify\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport config from \"../../../config.js\";\n/* Localization */\n\nimport LocalizedStrings from 'react-localization';\n\nvar MainMenu_ListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MainMenu_ListItem, _React$Component);\n\n  function MainMenu_ListItem(props) {\n    var _this;\n\n    _classCallCheck(this, MainMenu_ListItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainMenu_ListItem).call(this, props));\n\n    _this.login = function (event) {\n      /* Logs user in, if password or username\n         is not valid login will automatically fail. */\n      event.preventDefault();\n\n      if (_this.state.passwordIsValid && _this.state.usernameIsValid) {\n        Auth.signIn(_this.state.username, _this.state.password).then(function (user) {\n          /* If user needs to set new password this will automatically set old\n             password as a new password and after that tries to log user in. */\n          if (user.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n            user.completeNewPasswordChallenge(_this.state.password).then(function (s) {\n              _this.setState({\n                loggingSucceeded: false\n              });\n\n              Auth.signIn(_this.state.username, _this.state.password).then(function (s) {\n                console.log(user.username + \" logged in!\");\n\n                _this.setState({\n                  loggingSucceeded: true\n                });\n              }).catch(function (e) {\n                _this.setState({\n                  loggingFailed: true\n                });\n              });\n            }).catch(function (err) {\n              return _this.setState({\n                loggingSucceeded: false\n              });\n            });\n          } else {\n            console.log(user.username + \" logged in!\");\n\n            _this.setState({\n              loggingSucceeded: true\n            });\n          }\n        }).catch(function (e) {\n          _this.setState({\n            loggingFailed: true\n          });\n        });\n      } else {\n        _this.setState({\n          loggingFailed: true\n        });\n      }\n    };\n\n    _this.changeUsername = function (event) {\n      /* Implements validation of username */\n      if (event.target.value.length >= config.login.USERNAME_MIN_LENGTH && event.target.value.length <= config.login.USERNAME_MAX_LENGTH) {\n        _this.setState({\n          username: event.target.value,\n          usernameIsValid: true\n        });\n      } else {\n        if (event.target.value.length === 0) {\n          _this.setState({\n            username: event.target.value,\n            usernameIsValid: true\n          });\n        } else {\n          _this.setState({\n            username: event.target.value,\n            usernameIsValid: false\n          });\n        }\n      }\n    };\n\n    _this.changePassword = function (event) {\n      if (event.target.value.length >= config.login.PASSWORD_MIN_LENGTH && event.target.value.length <= config.login.PASSWORD_MAX_LENGTH) {\n        _this.setState({\n          password: event.target.value,\n          passwordIsValid: true\n        });\n      } else {\n        if (event.target.value.length === 0) {\n          _this.setState({\n            password: event.target.value,\n            passwordIsValid: true\n          });\n        } else {\n          _this.setState({\n            password: event.target.value,\n            passwordIsValid: false\n          });\n        }\n      }\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      loggingFailed: false,\n      loggingSucceeded: false,\n      passwordIsValid: true,\n      usernameIsValid: true\n    };\n    return _this;\n  }\n\n  _createClass(MainMenu_ListItem, [{\n    key: \"render\",\n    value: function render() {\n      /* Styles for the input box borders. */\n      var passwordBorderStyle = {\n        'borderStyle': 'solid solid solid solid',\n        'borderColor': 'black'\n      };\n      var usernameBorderStyle = {\n        'borderStyle': 'solid solid solid solid',\n        'borderColor': 'black'\n      };\n      /* Changes input box border colors to the red when they are not valid. */\n\n      if (!this.state.passwordIsValid) {\n        passwordBorderStyle = {\n          'borderStyle': 'solid solid solid solid',\n          'borderColor': 'red'\n        };\n      }\n\n      if (!this.state.usernameIsValid) {\n        usernameBorderStyle = {\n          'borderStyle': 'solid solid solid solid',\n          'borderColor': 'red'\n        };\n      }\n      /* Localization */\n\n\n      var strings = new LocalizedStrings({\n        en: {\n          username: \"Username:\",\n          password: \"Password: \",\n          login: \"Login\"\n        },\n        fi: {\n          username: \"Käyttäjänimi:\",\n          password: \"Salasana: \",\n          login: \"Kirjaudu\"\n        }\n      });\n      strings.setLanguage(this.props.language);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.state.loggingFailed && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, strings.wrongusername), React.createElement(\"form\", {\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, strings.username, \" \", React.createElement(\"input\", {\n        className: \"input\",\n        style: usernameBorderStyle,\n        value: this.state.username,\n        onChange: this.changeUsername,\n        type: \"text\",\n        name: \"username\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), strings.password, \" \", React.createElement(\"input\", {\n        className: \"input\",\n        style: passwordBorderStyle,\n        value: this.state.password,\n        onChange: this.changePassword,\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: strings.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), this.state.loggingSucceeded && React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MainMenu_ListItem;\n}(React.Component);\n\nexport { MainMenu_ListItem as default };","map":{"version":3,"sources":["/home/uusi2/dev-sip/sipuliton/client/src/modules/login/components/Login_Form.js"],"names":["React","NavItem","NavLink","form","Button","Auth","Link","Redirect","config","LocalizedStrings","MainMenu_ListItem","props","login","event","preventDefault","state","passwordIsValid","usernameIsValid","signIn","username","password","then","user","challengeName","completeNewPasswordChallenge","s","setState","loggingSucceeded","console","log","catch","e","loggingFailed","err","changeUsername","target","value","length","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","changePassword","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","passwordBorderStyle","usernameBorderStyle","strings","en","fi","setLanguage","language","wrongusername","Component"],"mappings":"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","sourcesContent":["/*\nThis file implements regular login to the application.\n*/\n\nimport React from 'react';\nimport {\n  NavItem,\n  NavLink,\n  form,\n  Button\n} from 'reactstrap';\n\nimport { Auth } from \"aws-amplify\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport config from \"../../../config.js\"\n/* Localization */\nimport LocalizedStrings from 'react-localization';\n\n\n\nexport default class MainMenu_ListItem extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      username:\"\",\n      password:\"\",\n      loggingFailed: false,\n      loggingSucceeded:false,\n      passwordIsValid: true,\n      usernameIsValid: true\n    };\n  }\n\n  login = event =>{\n\n   /* Logs user in, if password or username\n      is not valid login will automatically fail. */\n\n      event.preventDefault();\n      if(this.state.passwordIsValid && this.state.usernameIsValid){\n        Auth.signIn(this.state.username,this.state.password)\n          .then(user => {\n\n            /* If user needs to set new password this will automatically set old\n               password as a new password and after that tries to log user in. */\n\n            if(user.challengeName === \"NEW_PASSWORD_REQUIRED\"){\n              user.completeNewPasswordChallenge(this.state.password).then(s => {\n                this.setState({loggingSucceeded:false});\n                Auth.signIn(this.state.username,this.state.password).then(s => {\n                  console.log(user.username+\" logged in!\");\n                  this.setState({loggingSucceeded:true});\n                }).catch(e => {this.setState({loggingFailed:true});});\n              }).catch(err => this.setState({loggingSucceeded:false}));\n            }\n            else{\n                console.log(user.username+\" logged in!\");\n                this.setState({loggingSucceeded:true});\n            }\n        })\n        .catch(e => {\n          this.setState({loggingFailed:true});\n        });\n      }\n      else{\n        this.setState({loggingFailed:true});\n      }\n  }\n\n  /*\n  This method implements username validation. This only checks that username is\n  not too short or too long. Lenghts are read from config.js file.\n  */\n  changeUsername = (event) => {\n    /* Implements validation of username */\n    if(event.target.value.length >= config.login.USERNAME_MIN_LENGTH\n      && event.target.value.length <= config.login.USERNAME_MAX_LENGTH){\n      this.setState({username: event.target.value, usernameIsValid: true });\n    }\n    else{\n      if(event.target.value.length === 0){\n        this.setState({username: event.target.value, usernameIsValid: true });\n      }\n      else{\n        this.setState({username: event.target.value, usernameIsValid: false });\n      }\n    }\n  }\n\n  /*\n  This method implements password validation. This only checks that password is\n  not too short or too long. Lenghts are read from config.js file.\n  */\n  changePassword = (event) => {\n    if(event.target.value.length >= config.login.PASSWORD_MIN_LENGTH\n      && event.target.value.length <= config.login.PASSWORD_MAX_LENGTH){\n      this.setState({password: event.target.value, passwordIsValid: true });\n    }\n    else{\n      if(event.target.value.length === 0){\n        this.setState({password: event.target.value, passwordIsValid: true });\n      }\n      else{\n        this.setState({password: event.target.value, passwordIsValid: false });\n      }\n    }\n  }\n\n\n  render(){\n\n    /* Styles for the input box borders. */\n    var passwordBorderStyle = {\n      'borderStyle': 'solid solid solid solid',\n      'borderColor': 'black',\n    };\n    var usernameBorderStyle = {\n      'borderStyle': 'solid solid solid solid',\n      'borderColor': 'black',\n    };\n\n    /* Changes input box border colors to the red when they are not valid. */\n    if(!this.state.passwordIsValid){\n      passwordBorderStyle = {\n        'borderStyle': 'solid solid solid solid',\n        'borderColor': 'red',\n      };\n    }\n    if(!this.state.usernameIsValid){\n      usernameBorderStyle = {\n        'borderStyle': 'solid solid solid solid',\n        'borderColor': 'red',\n      };\n    }\n\n    /* Localization */\n    let strings = new LocalizedStrings({\n      en:{\n        username:\"Username:\",\n        password:\"Password: \",\n        login:\"Login\",\n      },\n      fi: {\n        username:\"Käyttäjänimi:\",\n        password:\"Salasana: \",\n        login:\"Kirjaudu\",\n      }\n    });\n    strings.setLanguage(this.props.language);\n\n    return (\n      <div>\n        {this.state.loggingFailed && <div>{strings.wrongusername}</div>}\n        <form onSubmit={this.login}>\n          {strings.username} <input className=\"input\" style={usernameBorderStyle} value={this.state.username} onChange={this.changeUsername} type=\"text\" name=\"username\" required />\n          {strings.password} <input className=\"input\" style={passwordBorderStyle} value={this.state.password} onChange={this.changePassword} type=\"password\" name=\"password\" required />\n          <input type=\"submit\" value={strings.login} />\n        </form>\n        {this.state.loggingSucceeded && <Redirect to=\"/profile\" />}\n\n\n      </div>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}