{"ast":null,"code":"import _classCallCheck from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/uusi/front4/sipuliton/client/src/modules/forgotpassword/components/ForgotPassword_Form.js\";\n\n/*\nThis file implements forgot password form functionality. In this file is\nimplemented forgot password code sending to user's email and after that show\npassword changing objects to the user. In password changing user can change\npassword to account with sended code.\n*/\nimport React from 'react';\nimport { Button, Form, FormGroup, Label } from 'reactstrap';\nimport { Auth } from \"aws-amplify\";\nimport { Redirect } from \"react-router-dom\";\nimport commonComponents from '../../common';\n/* Configuration files */\n\nimport config from \"../../../config.js\";\n/* Localization */\n\nimport LocalizedStrings from 'react-localization';\n/*\n ForgotPassword_Form class which implements all needed things for the password\n changing.\n*/\n\nvar ForgotPassword_Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ForgotPassword_Form, _React$Component);\n\n  function ForgotPassword_Form(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword_Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPassword_Form).call(this, props));\n\n    _this.sendCode = function (event) {\n      event.preventDefault();\n\n      if (_this.state.usernameIsValid) {\n        /* Implements forgot password code sending. */\n        _this.setState({\n          codeSendingFailed: false,\n          limitExceeded: false\n        });\n\n        Auth.forgotPassword(_this.state.username).then(function (data) {\n          console.log(data);\n\n          _this.setState({\n            codeSentSuccesfully: true,\n            email: data.CodeDeliveryDetails.Destination,\n            codeSendingFailed: false,\n            limitExceeded: false\n          });\n        }).catch(function (err) {\n          /* Exception when code is sent too many times in a short time period.*/\n          if (err.code === \"LimitExceededException\") {\n            _this.setState({\n              limitExceeded: true,\n              codeSendingFailed: false\n            });\n          } else {\n            _this.setState({\n              limitExceeded: false,\n              codeSendingFailed: true\n            });\n          }\n        });\n      } else {\n        _this.setState({\n          codeSendingFailed: true\n        });\n      }\n    };\n\n    _this.changePassword = function (event) {\n      event.preventDefault();\n      var strings = new LocalizedStrings({\n        en: {\n          changeSuccess: \"Password changed successfully!\"\n        },\n        fi: {\n          changeSuccess: \"Salasana vaihdettu onnistuneesti!\"\n        }\n      });\n      strings.setLanguage(_this.props.language);\n\n      if (_this.state.passwordsMatch && _this.state.codeIsValid && _this.state.newPasswordIsValid) {\n        _this.setState({\n          passwordChangingFailed: false\n        });\n        /* Changes user password for the user. */\n\n\n        Auth.forgotPasswordSubmit(_this.state.username, _this.state.code, _this.state.newPassword).then(function (data) {\n          _this.setState({\n            passwordChangedSuccesfully: true\n          });\n\n          alert(strings.changeSuccess);\n        }).catch(function (err) {\n          return _this.setState({\n            passwordChangedSuccesfully: false,\n            passwordChangingFailed: true\n          });\n        });\n      } else {\n        _this.setState({\n          passwordChangedSuccesfully: false,\n          passwordChangingFailed: true\n        });\n      }\n    };\n\n    _this.changeCode = function (event) {\n      var code = event.target.value;\n\n      if (code.length >= config.login.CODE_MIN_LENGTH && code.length <= config.login.CODE_MAX_LENGTH) {\n        _this.setState({\n          code: code,\n          codeIsValid: true\n        });\n      } else {\n        _this.setState({\n          code: code,\n          codeIsValid: false\n        });\n      }\n    };\n\n    _this.changeUsername = function (event) {\n      var username = event.target.value;\n\n      if (username.length >= config.login.USERNAME_MIN_LENGTH && username.length <= config.login.USERNAME_MAX_LENGTH) {\n        _this.setState({\n          username: username,\n          usernameIsValid: true\n        });\n      } else {\n        _this.setState({\n          username: username,\n          usernameIsValid: false\n        });\n      }\n    };\n\n    _this.changeNewPassword = function (event) {\n      var password = event.target.value;\n      var reLowerCase = /[a-z]/;\n      var reNumber = /[0-9]/;\n      var isValid = password != null && password.length >= config.login.PASSWORD_MIN_LENGTH && password.length <= config.login.PASSWORD_MAX_LENGTH && reLowerCase.test(password) && reNumber.test(password);\n      var passwordsMatch = password === _this.state.newPasswordAgain;\n\n      _this.setState({\n        newPassword: password,\n        newPasswordIsValid: isValid,\n        passwordsMatch: passwordsMatch\n      });\n    };\n\n    _this.changeNewPasswordAgain = function (event) {\n      var password2 = event.target.value;\n\n      _this.setState({\n        newPasswordAgain: password2,\n        passwordsMatch: password2 === _this.state.newPassword\n      });\n    };\n\n    _this.state = {\n      username: \"\",\n      newPassword: \"\",\n      newPasswordAgain: \"\",\n      code: \"\",\n      codeSentSuccesfully: false,\n      passwordChangedSuccesfully: false,\n      passwordsMatch: true,\n      codeSendingFailed: false,\n      email: \"\",\n      limitExceeded: false,\n      codeIsValid: true,\n      usernameIsValid: true,\n      newPasswordIsValid: true\n    };\n    _this.sendCodeAgain = _this.sendCodeAgain.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateChangeForm = _this.validateChangeForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /*\n  Returns all states back to normal after user decides to send code again. This\n  method is called when user clicks send code again button.\n  */\n\n\n  _createClass(ForgotPassword_Form, [{\n    key: \"sendCodeAgain\",\n    value: function sendCodeAgain() {\n      this.setState({\n        email: \"\",\n        newPassword: \"\",\n        newPasswordAgain: \"\",\n        code: \"\",\n        codeSentSuccesfully: false,\n        passwordChangedSuccesfully: false,\n        passwordsMatch: true,\n        passwordChangingFailed: false,\n        limitExceeded: false,\n        codeIsValid: true,\n        usernameIsValid: true,\n        newPasswordIsValid: true\n      });\n    }\n    /*\n    This method implements password changing code to the user's email.\n    This method is called when user clicks send code button.\n    */\n\n  }, {\n    key: \"validateChangeForm\",\n    value: function validateChangeForm() {\n      /*Make sure all fields are okay*/\n      var isValid = this.state.newPasswordIsValid && this.state.newPassword.length > 0 && this.state.passwordsMatch && this.state.newPasswordAgain.length > 0 && this.state.codeIsValid && this.state.code.length > 0;\n      return isValid;\n    }\n    /*\n    This method implements code validation. This only checks that code is not\n    too short or too long. Lenghts are read from config.js file.\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var VInput = commonComponents.VInput;\n      var strings = new LocalizedStrings({\n        en: {\n          username: \"Username:\",\n          sendCode: \"Send code\",\n          usernotfound: \"User not found or username is invalid.\",\n          limitexceeded: \"You send a code too many times in a row, try again later.\",\n          passwordchangedidntsuccee: \"Password didn't succeed, password or code is invalid.\",\n          codesentto: \"Code was sent to following email address: \",\n          newpassword: \"New password:\",\n          newpasswordagain: \"New password again:\",\n          code: \"Code:\",\n          didntGetEmail: \"Didn't get email? \",\n          sendcodeagain: \"Send code again\",\n          changePassword: \"Change password\"\n        },\n        fi: {\n          username: \"Käyttäjänimi:\",\n          sendCode: \"Lähetä koodi\",\n          usernotfound: \"Käyttäjää ei löydy tai käyttäjänimi ei ole validi.\",\n          limitexceeded: \"Lähetit koodin liian monta kertaa, yritä myöhemmin uudelleen.\",\n          passwordchangedidntsuccee: \"Salasanan vaihto ei onnistunut, salasana tai koodi ei ole validi.\",\n          codesentto: \"Koodi lähetetty sähköpostilla osoitteeseen: \",\n          newpassword: \"Uusi salasana:\",\n          newpasswordagain: \"Uusi salasana uudelleen:\",\n          code: \"Koodi:\",\n          didntGetEmail: \"Etkö saanut sähköpostia? \",\n          sendcodeagain: \"Lähetä koodi uudelleen\",\n          changePassword: \"Vaihda salasana\"\n        }\n      });\n      strings.setLanguage(this.props.language);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, this.state.codeSendingFailed && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, strings.usernotfound), this.state.limitExceeded && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, strings.limitexceeded), !this.state.codeSentSuccesfully && React.createElement(Form, {\n        onSubmit: this.sendCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, strings.username), React.createElement(VInput, {\n        isValid: this.state.usernameIsValid,\n        value: this.state.username,\n        onChange: this.changeUsername,\n        type: \"text\",\n        name: \"username\",\n        required: true,\n        autoFocus: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })), React.createElement(VInput, {\n        className: \"main-btn big-btn max-w-10\",\n        type: \"submit\",\n        value: strings.sendCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })), this.state.passwordChangingFailed && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, strings.passwordchangedidntsuccee), this.state.codeSentSuccesfully && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, strings.codesentto, this.state.email, \".\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, strings.didntGetEmail, React.createElement(Button, {\n        onClick: this.sendCodeAgain,\n        className: \"secondary-btn small-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, strings.sendcodeagain)), React.createElement(Form, {\n        onSubmit: this.changePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, strings.newpassword), React.createElement(VInput, {\n        isValid: this.state.newPasswordIsValid,\n        value: this.state.newPassword,\n        onChange: this.changeNewPassword,\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        autoFocus: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, strings.newpasswordagain), React.createElement(VInput, {\n        isValid: this.state.passwordsMatch,\n        value: this.state.newPasswordAgain,\n        onChange: this.changeNewPasswordAgain,\n        type: \"password\",\n        name: \"password2\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, strings.code), React.createElement(VInput, {\n        isValid: this.state.codeIsValid,\n        value: this.state.code,\n        onChange: this.changeCode,\n        type: \"text\",\n        name: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })), React.createElement(VInput, {\n        type: \"submit\",\n        value: strings.changePassword,\n        isValid: this.validateChangeForm,\n        className: \"main-btn big-btn max-w-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }))), this.state.passwordChangedSuccesfully && React.createElement(Redirect, {\n        to: '/' + this.props.language + '/login',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ForgotPassword_Form;\n}(React.Component);\n\nexport { ForgotPassword_Form as default };","map":{"version":3,"sources":["/home/uusi/front4/sipuliton/client/src/modules/forgotpassword/components/ForgotPassword_Form.js"],"names":["React","Button","Form","FormGroup","Label","Auth","Redirect","commonComponents","config","LocalizedStrings","ForgotPassword_Form","props","sendCode","event","preventDefault","state","usernameIsValid","setState","codeSendingFailed","limitExceeded","forgotPassword","username","then","data","console","log","codeSentSuccesfully","email","CodeDeliveryDetails","Destination","catch","err","code","changePassword","strings","en","changeSuccess","fi","setLanguage","language","passwordsMatch","codeIsValid","newPasswordIsValid","passwordChangingFailed","forgotPasswordSubmit","newPassword","passwordChangedSuccesfully","alert","changeCode","target","value","length","login","CODE_MIN_LENGTH","CODE_MAX_LENGTH","changeUsername","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","changeNewPassword","password","reLowerCase","reNumber","isValid","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","test","newPasswordAgain","changeNewPasswordAgain","password2","sendCodeAgain","bind","validateChangeForm","VInput","usernotfound","limitexceeded","passwordchangedidntsuccee","codesentto","newpassword","newpasswordagain","didntGetEmail","sendcodeagain","Component"],"mappings":"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","sourcesContent":["/*\nThis file implements forgot password form functionality. In this file is\nimplemented forgot password code sending to user's email and after that show\npassword changing objects to the user. In password changing user can change\npassword to account with sended code.\n*/\n\nimport React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n} from 'reactstrap';\nimport { Auth } from \"aws-amplify\";\nimport { Redirect } from \"react-router-dom\";\nimport commonComponents from '../../common'\n\n/* Configuration files */\nimport config from \"../../../config.js\"\n\n/* Localization */\nimport LocalizedStrings from 'react-localization';\n\n/*\n ForgotPassword_Form class which implements all needed things for the password\n changing.\n*/\nexport default class ForgotPassword_Form extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      username:\"\",\n      newPassword:\"\",\n      newPasswordAgain:\"\",\n      code:\"\",\n      codeSentSuccesfully: false,\n      passwordChangedSuccesfully:false,\n      passwordsMatch: true,\n      codeSendingFailed: false,\n      email:\"\",\n      limitExceeded:false,\n      codeIsValid:true,\n      usernameIsValid:true,\n      newPasswordIsValid:true,\n\n    };\n    this.sendCodeAgain = this.sendCodeAgain.bind(this);\n    this.validateChangeForm = this.validateChangeForm.bind(this);\n  }\n\n  /*\n  Returns all states back to normal after user decides to send code again. This\n  method is called when user clicks send code again button.\n  */\n  sendCodeAgain(){\n    this.setState({\n      email:\"\",\n      newPassword:\"\",\n      newPasswordAgain:\"\",\n      code:\"\",\n      codeSentSuccesfully: false,\n      passwordChangedSuccesfully:false,\n      passwordsMatch: true,\n      passwordChangingFailed: false,\n      limitExceeded:false,\n      codeIsValid:true,\n      usernameIsValid:true,\n      newPasswordIsValid:true,\n    })\n  }\n\n  /*\n  This method implements password changing code to the user's email.\n  This method is called when user clicks send code button.\n  */\n  sendCode = (event) => {\n      event.preventDefault();\n      if(this.state.usernameIsValid){\n        /* Implements forgot password code sending. */\n        this.setState({codeSendingFailed: false, limitExceeded: false});\n        Auth.forgotPassword(this.state.username)\n          .then(data => {\n            console.log(data);\n            this.setState({\n              codeSentSuccesfully: true,\n              email: data.CodeDeliveryDetails.Destination,\n              codeSendingFailed: false,\n              limitExceeded: false,\n            });\n          })\n          .catch(err => {\n            /* Exception when code is sent too many times in a short time period.*/\n            if(err.code === \"LimitExceededException\"){\n              this.setState({\n                limitExceeded:true,\n                codeSendingFailed:false\n              });\n            }\n            else{\n              this.setState({\n                limitExceeded:false,\n                codeSendingFailed:true\n              });\n            }\n          });\n      }\n      else{\n        this.setState({\n          codeSendingFailed:true\n        });\n      }\n\n  }\n\n  /*\n  Method which implements password changing for the user. This method is\n  ran when user clicks change password button.\n  */\n  changePassword = (event) => {\n    event.preventDefault();\n    let strings = new LocalizedStrings({\n      en:{\n        changeSuccess:\"Password changed successfully!\",\n      },\n      fi: {\n        changeSuccess:\"Salasana vaihdettu onnistuneesti!\",\n      }\n    });\n    strings.setLanguage(this.props.language);\n\n    if(this.state.passwordsMatch && this.state.codeIsValid\n      && this.state.newPasswordIsValid) {\n      this.setState({passwordChangingFailed:false});\n      /* Changes user password for the user. */\n      Auth.forgotPasswordSubmit(\n        this.state.username,\n        this.state.code,\n        this.state.newPassword\n      )\n        .then(data => {\n          this.setState({passwordChangedSuccesfully: true});\n          alert(strings.changeSuccess);\n        })\n        .catch(err => this.setState({\n          passwordChangedSuccesfully:false,\n          passwordChangingFailed: true\n        }));\n    }\n    else{\n      this.setState({\n        passwordChangedSuccesfully:false,\n        passwordChangingFailed: true\n      });\n    }\n\n  }\n\n\tvalidateChangeForm() {\n\t\t/*Make sure all fields are okay*/\n\t\tconst isValid = (\n\t\t\tthis.state.newPasswordIsValid && this.state.newPassword.length > 0 &&\n\t\t\tthis.state.passwordsMatch && this.state.newPasswordAgain.length > 0 && \n\t\t\tthis.state.codeIsValid && this.state.code.length > 0\n\t\t);\n\t\treturn isValid;\n\t}\n\n  /*\n  This method implements code validation. This only checks that code is not\n  too short or too long. Lenghts are read from config.js file.\n  */\n  changeCode = (event) => {\n    const code = event.target.value;\n    if (code.length >= config.login.CODE_MIN_LENGTH\n      && code.length <= config.login.CODE_MAX_LENGTH) {\n      this.setState({code: code, codeIsValid: true });\n    }\n    else {\n        this.setState({code: code, codeIsValid: false });\n    }\n  }\n\n  /*\n  This method implements username validation. This only checks that username is\n  not too short or too long. Lenghts are read from config.js file.\n  */\n  changeUsername = (event) => {\n    const username = event.target.value;\n    if (username.length >= config.login.USERNAME_MIN_LENGTH\n      && username.length <= config.login.USERNAME_MAX_LENGTH) {\n      this.setState({username: username, usernameIsValid: true });\n    }\n    else {\n        this.setState({username: username, usernameIsValid: false });\n    }\n  }\n\n  /*\n  This method implements new password validation. This only checks that password\n  is not too short or too long. Lenghts are read from config.js file.\n  */\n  changeNewPassword = (event) => {\n    const password = event.target.value;\n    const reLowerCase = /[a-z]/;\n    const reNumber = /[0-9]/;\n\t\tconst isValid = (\n\t\t\tpassword != null && \n\t\t\tpassword.length >= config.login.PASSWORD_MIN_LENGTH && \n\t\t\tpassword.length <= config.login.PASSWORD_MAX_LENGTH && \n\t\t\treLowerCase.test(password) && \n\t\t\treNumber.test(password)\n\t\t);\n\n    const passwordsMatch = (password === this.state.newPasswordAgain);\n    this.setState({ \n      newPassword: password, \n      newPasswordIsValid: isValid, \n      passwordsMatch: passwordsMatch,\n    });\n  }\n\n  /*\n  This method implements second new password validation. This only checks that\n  password is the same as the first password. \n  */\n  changeNewPasswordAgain = (event) => {\n    const password2 = event.target.value;\n    this.setState({\n      newPasswordAgain: password2,\n      passwordsMatch: (password2 === this.state.newPassword),\n    });\n  }\n\n  render(){\n    const { VInput, } = commonComponents;\n    let strings = new LocalizedStrings({\n      en:{\n        username:\"Username:\",\n        sendCode:\"Send code\",\n        usernotfound:\"User not found or username is invalid.\",\n        limitexceeded:\"You send a code too many times in a row, try again later.\",\n        passwordchangedidntsuccee:\"Password didn't succeed, password or code is invalid.\",\n        codesentto:\"Code was sent to following email address: \",\n        newpassword:\"New password:\",\n        newpasswordagain:\"New password again:\",\n        code:\"Code:\",\n        didntGetEmail:\"Didn't get email? \",\n        sendcodeagain:\"Send code again\",\n        changePassword:\"Change password\",\n      },\n      fi: {\n        username:\"Käyttäjänimi:\",\n        sendCode:\"Lähetä koodi\",\n        usernotfound:\"Käyttäjää ei löydy tai käyttäjänimi ei ole validi.\",\n        limitexceeded:\"Lähetit koodin liian monta kertaa, yritä myöhemmin uudelleen.\",\n        passwordchangedidntsuccee:\"Salasanan vaihto ei onnistunut, salasana tai koodi ei ole validi.\",\n        codesentto:\"Koodi lähetetty sähköpostilla osoitteeseen: \",\n        newpassword:\"Uusi salasana:\",\n        newpasswordagain:\"Uusi salasana uudelleen:\",\n        code:\"Koodi:\",\n        didntGetEmail:\"Etkö saanut sähköpostia? \",\n        sendcodeagain:\"Lähetä koodi uudelleen\",\n        changePassword:\"Vaihda salasana\",\n      }\n    });\n    strings.setLanguage(this.props.language);\n\n    return (\n      <div>\n        {this.state.codeSendingFailed && <div>{strings.usernotfound}</div>}\n        {this.state.limitExceeded && <div>{strings.limitexceeded}</div>}\n        {!this.state.codeSentSuccesfully &&\n          <Form onSubmit={this.sendCode}>\n            <FormGroup>\n              <Label>{strings.username}</Label>\n              <VInput isValid={this.state.usernameIsValid} value={this.state.username} onChange={this.changeUsername} type=\"text\" name=\"username\" required autoFocus=\"true\" />\n            </FormGroup>\n            <VInput className=\"main-btn big-btn max-w-10\" type=\"submit\" value={strings.sendCode} />\n          </Form>\n        }\n        {this.state.passwordChangingFailed &&\n          <div>\n            {strings.passwordchangedidntsuccee}\n          </div>\n        }\n\n        {this.state.codeSentSuccesfully && \n          <div>\n            <p>{strings.codesentto}{this.state.email}.</p>\n            <p>\n              {strings.didntGetEmail}\n              <Button onClick={this.sendCodeAgain} className=\"secondary-btn small-btn\">{strings.sendcodeagain}</Button>\n            </p>\n            <Form onSubmit={this.changePassword}>\n              <FormGroup>\n                <Label>{strings.newpassword}</Label>\n                <VInput isValid={this.state.newPasswordIsValid} value={this.state.newPassword} onChange={this.changeNewPassword} type=\"password\" name=\"password\" required autoFocus=\"true\" />\n              </FormGroup>\n              <FormGroup>\n                <Label>{strings.newpasswordagain}</Label>\n                <VInput isValid={this.state.passwordsMatch} value={this.state.newPasswordAgain} onChange={this.changeNewPasswordAgain} type=\"password\" name=\"password2\" required />\n              </FormGroup>\n              <FormGroup>\n                <Label>{strings.code}</Label>\n                <VInput isValid={this.state.codeIsValid} value={this.state.code} onChange={this.changeCode} type=\"text\" name=\"password\" required />\n              </FormGroup>\n              <VInput type=\"submit\" value={strings.changePassword} isValid={this.validateChangeForm} className=\"main-btn big-btn max-w-10\"/>\n            </Form>\n          </div>\n        }\n\n        {this.state.passwordChangedSuccesfully && <Redirect to={'/' + this.props.language + '/login'} />}\n\n      </div>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}