{"ast":null,"code":"import _classCallCheck from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/uusi/front4/sipuliton/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/uusi/front4/sipuliton/client/src/modules/home/components/SearchBar.js\";\n\n/*\n\n  This file contains the search bar functionality, as well as filter system.\n\n*/\nimport React from 'react';\nimport { Button, UncontrolledTooltip, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport ReactStars from 'react-stars';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../../../styles/landingpage.css';\n/* Localization */\n\nimport LocalizedStrings from 'react-localization';\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar(props, context) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props, context)); //Bind the \n\n    _this.doSearch = function (event) {\n      event.preventDefault();\n      console.log(\"Doing search\"); //First, split off various keywords. Separator is ','\n\n      var searchTerms = _this.state.keywords.split(','); //Remove whitespaces\n\n\n      for (var i = 0; i < searchTerms.length; i++) {\n        searchTerms[i] = searchTerms[i].trim();\n      } //Console log test to se that we got what we wanted\n\n\n      console.log(\"Search terms: \");\n      console.log(searchTerms);\n      console.log(\"Filters: \");\n      console.log(_this.state.filters); //Basic search portion\n\n      var url = 'http://localhost:3000/search?pageSize=10&pageNumber=0&orderBy=rating_overall' + '&minOverallRating=' + _this.state.minOverall + '&minReliabilityRating=' + _this.state.minReliability + '&minVarietyRating=' + _this.state.minService + '&minServiceAndQualityRating=' + _this.state.minVariety;\n      console.log(\"URL to fetch from: \" + url);\n\n      _this.props.searching();\n\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(\"Sending results\");\n        console.log(result); //Send data via props\n\n        _this.props.onSearchDone(result);\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        console.log(\"DEBUG: ComponentsDidMount error\");\n        console.log(error);\n\n        _this.props.onError(error);\n      });\n    };\n\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopover = _this.togglePopover.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.doSearch = _this.doSearch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getDefaultValues = _this.getDefaultValues.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getOptions = _this.getOptions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleKeywordChange = _this.handleKeywordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFilterChange = _this.handleFilterChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeOverall = _this.changeOverall.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeReliability = _this.changeReliability.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeVariety = _this.changeVariety.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeService = _this.changeService.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changePricing = _this.changePricing.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isLoading: true,\n      loadedDefaults: false,\n      loadedOptions: false,\n      popoverOpen: false,\n      modalState: false,\n      filters: [],\n      keywords: '',\n      options: [],\n      defaultValues: [],\n      minOverall: 0,\n      minReliability: 0,\n      minVariety: 0,\n      minService: 0,\n      pricing: 0\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        options: this.getOptions(),\n        defaultValue: this.getDefaultValues()\n      });\n    } //Toggles modal\n\n  }, {\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        modalState: !this.state.modalState\n      });\n      console.log(\"showModal: Toggling modal to \" + this.state.modalState);\n    } //Toggles popover\n\n  }, {\n    key: \"togglePopover\",\n    value: function togglePopover() {\n      this.setState({\n        popoverOpen: !this.state.popoverOpen\n      }); //console.log(\"Toggling popover, new state is: \" + this.state.popoverOpen);\n    } //Actual search event. It also sends signal to the parent by using props.SearchDone, which signals it has done a search and this.props.searchResults which has the results\n\n  }, {\n    key: \"getDefaultValues\",\n    //Get the default selections. Mainly checks if user is logged in if is, then get the data\n    value: function getDefaultValues() {\n      var defaultValues = [];\n      this.setState({\n        loadedDefaults: true\n      });\n      return defaultValues;\n    } //This gets the options for the selection.\n\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      var options = [{\n        value: '1',\n        label: 'Allergia/Sipuli'\n      }, {\n        value: '2',\n        label: 'Allergia/Tomaatti'\n      }, {\n        value: '3',\n        label: 'Allergia/Pähkinä'\n      }, {\n        value: '4',\n        label: 'Laktoositon ruokavalio'\n      }, {\n        value: '5 ',\n        label: 'Keliakia'\n      }];\n      console.log(\"Getting the options: \");\n      console.log(options);\n      this.state.loadedOptions = true;\n      this.setState({\n        loadedOptions: true\n      });\n      return options;\n    }\n  }, {\n    key: \"renderFilterButton\",\n    value: function renderFilterButton() {\n      if (this.state.loadedDefaults && this.state.loadedOptions) {\n        return React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"searchBtn\",\n          onClick: this.doSearch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: \"search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }));\n      } else {\n        return \"Ladataan tietoja...\";\n      }\n    } //Used for the keyword change\n\n  }, {\n    key: \"handleKeywordChange\",\n    value: function handleKeywordChange(event) {\n      //console.log(\"Changing selected keywords\");\n      this.setState({\n        keywords: event.target.value\n      }); //console.log(event.target.value);\n      //console.log(this.state.keywords);\n    } //Used to acknowledge change and store new values\n\n  }, {\n    key: \"handleFilterChange\",\n    value: function handleFilterChange(selectedOptions) {\n      //console.log(\"Changing selected filters\");\n      this.setState({\n        filters: selectedOptions\n      }); //console.log(selectedOptions);\n      //console.log(this.state.filters);\n    } //Used to change star rating values\n\n  }, {\n    key: \"changeOverall\",\n    value: function changeOverall(newRating, name) {\n      this.setState({\n        minOverall: newRating\n      });\n    }\n  }, {\n    key: \"changeReliability\",\n    value: function changeReliability(newRating, name) {\n      this.setState({\n        minReliability: newRating\n      });\n    }\n  }, {\n    key: \"changeService\",\n    value: function changeService(newRating, name) {\n      this.setState({\n        minService: newRating\n      });\n    }\n  }, {\n    key: \"changeVariety\",\n    value: function changeVariety(newRating, name) {\n      this.setState({\n        minVariety: newRating\n      });\n    }\n  }, {\n    key: \"changePricing\",\n    value: function changePricing(newRating, name) {\n      this.setState({\n        pricing: newRating\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /* Localization */\n      var strings = new LocalizedStrings({\n        en: {\n          search: \"Search...\",\n          usecommaasaseparator: \"Use comma ( , ) as a separator.\",\n          filter: \"Filter\",\n          includeinsearch: \"Include in search:\",\n          diets: \"Diets\",\n          closeModal: \"Close\",\n          overall: \"Overall rating\",\n          reliability: \"Menu reliability\",\n          service: \"Service & Food\",\n          variety: \"Menu variety\",\n          pricing: \"Pricing\"\n        },\n        fi: {\n          search: \"Hae...\",\n          usecommaasaseparator: \"Käytä pilkkua ( , ) erottimena.\",\n          filter: \"Rajaa\",\n          includeinsearch: \"Sisällytä hakuun:\",\n          diets: \"Ruokavaliot\",\n          closeModal: \"Sulje\",\n          overall: \"Keskiarvo\",\n          reliability: \"Ruokavalion luotettavuus\",\n          service: \"Ruoka ja palvelu\",\n          variety: \"Ruokalajien laajuus\",\n          pricing: \"Hintaluokka\"\n        }\n      });\n\n      if (typeof this.props.language !== 'undefined') {\n        strings.setLanguage(this.props.language);\n      } else {\n        strings.setLanguage('fi');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"searchDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"search-form\",\n        className: \"search\",\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.keywords,\n        onChange: this.handleKeywordChange,\n        className: \"round\",\n        placeholder: strings.search,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"searchBtn\",\n        onClick: this.doSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"instructions\",\n        id: \"instructions-symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \" ??? \"), React.createElement(UncontrolledTooltip, {\n        placement: \"right\",\n        target: \"instructions-symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, strings.usecommaasaseparator), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"filterBtn\",\n        id: \"filter_popover\",\n        onClick: this.toggleModal,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, strings.filter), React.createElement(Modal, {\n        isOpen: this.state.modalState,\n        toggle: this.toggleModal,\n        className: \"filterBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, strings.includeinsearch), React.createElement(ModalBody, {\n        className: \"filterBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, strings.diets, React.createElement(Select, {\n        defaultValue: this.state.defaultValues,\n        isMulti: true,\n        name: \"filtersDrop\",\n        options: this.state.options,\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        onChange: this.handleFilterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), strings.overall, React.createElement(ReactStars, {\n        value: this.state.minOverall,\n        count: 5,\n        size: 24,\n        onChange: this.changeOverall,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), strings.reliability, React.createElement(ReactStars, {\n        value: this.state.minReliability,\n        count: 5,\n        size: 24,\n        onChange: this.changeReliability,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), strings.service, React.createElement(ReactStars, {\n        value: this.state.minService,\n        count: 5,\n        size: 24,\n        onChange: this.changeService,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), strings.variety, React.createElement(ReactStars, {\n        value: this.state.minVariety,\n        count: 5,\n        size: 24,\n        onChange: this.changeVariety,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), strings.pricing, React.createElement(ReactStars, {\n        value: this.state.pricing,\n        count: 3,\n        size: 24,\n        char: \"\\u20AC\",\n        half: false,\n        onChange: this.changePricing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \" \", strings.closeModal, \" \")))));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/uusi/front4/sipuliton/client/src/modules/home/components/SearchBar.js"],"names":["React","Button","UncontrolledTooltip","Modal","ModalHeader","ModalBody","ModalFooter","ReactStars","Select","FontAwesomeIcon","styles","LocalizedStrings","SearchBar","props","context","doSearch","event","preventDefault","console","log","searchTerms","state","keywords","split","i","length","trim","filters","url","minOverall","minReliability","minService","minVariety","searching","fetch","then","res","json","result","onSearchDone","error","onError","toggleModal","bind","togglePopover","getDefaultValues","getOptions","handleKeywordChange","handleFilterChange","changeOverall","changeReliability","changeVariety","changeService","changePricing","isLoading","loadedDefaults","loadedOptions","popoverOpen","modalState","options","defaultValues","pricing","setState","defaultValue","value","label","target","selectedOptions","newRating","name","strings","en","search","usecommaasaseparator","filter","includeinsearch","diets","closeModal","overall","reliability","service","variety","fi","language","setLanguage","login","Component"],"mappings":"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","sourcesContent":["/*\n\n  This file contains the search bar functionality, as well as filter system.\n\n*/\n\nimport React from 'react';\nimport { Button, UncontrolledTooltip, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport ReactStars from 'react-stars';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../../../styles/landingpage.css';\n\n/* Localization */\nimport LocalizedStrings from 'react-localization';\n\nclass SearchBar extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    //Bind the \n    this.toggleModal = this.toggleModal.bind(this);\n    this.togglePopover = this.togglePopover.bind(this);\n    this.doSearch = this.doSearch.bind(this);\n    this.getDefaultValues = this.getDefaultValues.bind(this);\n    this.getOptions = this.getOptions.bind(this);\n    this.handleKeywordChange = this.handleKeywordChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    \n    this.changeOverall = this.changeOverall.bind(this);\n    this.changeReliability = this.changeReliability.bind(this);\n    this.changeVariety = this.changeVariety.bind(this);\n    this.changeService = this.changeService.bind(this);\n    this.changePricing = this.changePricing.bind(this);\n\n    this.state = {\n      isLoading: true,\n      loadedDefaults: false,\n      loadedOptions: false,\n      popoverOpen: false,\n      modalState: false,\n      filters : [],\n      keywords : '',\n      options : [],\n      defaultValues : [],\n      minOverall : 0, \n      minReliability : 0,\n      minVariety : 0,\n      minService : 0,\n      pricing: 0\n      \n    };\n  }\n\n  componentDidMount() {\n\n    this.setState({\n      options : this.getOptions(),\n      defaultValue : this.getDefaultValues()\n    });\n\n  }\n  \n  //Toggles modal\n  toggleModal() {\n    \n    this.setState({\n      modalState: !this.state.modalState\n    });\n    \n    console.log(\"showModal: Toggling modal to \" + this.state.modalState)\n  }  \n  \n\n  //Toggles popover\n  togglePopover() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    });\n    //console.log(\"Toggling popover, new state is: \" + this.state.popoverOpen);\n  }\n\n  //Actual search event. It also sends signal to the parent by using props.SearchDone, which signals it has done a search and this.props.searchResults which has the results\n  doSearch  = event =>{\n\n      event.preventDefault();\n\n      console.log(\"Doing search\")\n      //First, split off various keywords. Separator is ','\n      var searchTerms = this.state.keywords.split(',');\n      //Remove whitespaces\n      for( var i = 0; i < searchTerms.length; i++)\n      {\n        searchTerms[i] = searchTerms[i].trim();\n      }\n\n\n\n      //Console log test to se that we got what we wanted\n      console.log(\"Search terms: \");\n      console.log(searchTerms);\n      console.log(\"Filters: \");\n      console.log(this.state.filters);\n      \n      //Basic search portion\n      var url = 'http://localhost:3000/search?pageSize=10&pageNumber=0&orderBy=rating_overall'\n                  + '&minOverallRating=' + this.state.minOverall\n                  + '&minReliabilityRating=' + this.state.minReliability\n                  + '&minVarietyRating=' + this.state.minService\n                  + '&minServiceAndQualityRating=' + this.state.minVariety;\n                  \n      console.log(\"URL to fetch from: \" + url)           ; \n      this.props.searching();\n      fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(\"Sending results\");\n          console.log(result);\n\n          //Send data via props\n          this.props.onSearchDone( result );\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(\"DEBUG: ComponentsDidMount error\");\n          console.log(error);\n          this.props.onError( error )\n        }\n      )\n\n  }\n\n\n  //Get the default selections. Mainly checks if user is logged in if is, then get the data\n  getDefaultValues() {\n\n    const defaultValues = [];\n    this.setState({\n      loadedDefaults : true\n    });\n    return defaultValues;\n  }\n\n  //This gets the options for the selection.\n  getOptions() {\n\n    const options = [\n      { value: '1', label: 'Allergia/Sipuli' },\n      { value: '2', label: 'Allergia/Tomaatti' },\n      { value: '3', label: 'Allergia/Pähkinä' },\n      { value: '4', label: 'Laktoositon ruokavalio' },\n      { value: '5 ', label: 'Keliakia' }\n    ];\n    console.log(\"Getting the options: \");\n    console.log(options);\n\n    this.state.loadedOptions = true;\n\n    this.setState({\n      loadedOptions : true\n    });\n\n    return options;\n  }\n\n  renderFilterButton()\n  {\n    if( this.state.loadedDefaults && this.state.loadedOptions) {\n      return (\n        <button type=\"submit\" className=\"searchBtn\" onClick={this.doSearch}>\n          <FontAwesomeIcon icon=\"search\" />\n        </button>\n      );\n    }\n    else {\n      return (\n        \"Ladataan tietoja...\"\n      );\n    }\n\n  }\n\n  //Used for the keyword change\n  handleKeywordChange(event) {\n    //console.log(\"Changing selected keywords\");\n    this.setState({keywords: event.target.value});\n    //console.log(event.target.value);\n    //console.log(this.state.keywords);\n  }\n\n  //Used to acknowledge change and store new values\n  handleFilterChange(selectedOptions) {\n    //console.log(\"Changing selected filters\");\n    this.setState({\n      filters : selectedOptions\n    });\n    //console.log(selectedOptions);\n    //console.log(this.state.filters);\n  }\n  \n  //Used to change star rating values\n  changeOverall(newRating, name)\n  {\n    this.setState({\n      minOverall : newRating\n    });\n  }  \n  changeReliability(newRating, name)\n  {\n    this.setState({\n      minReliability : newRating\n    });\n  }  \n  changeService(newRating, name)\n  {\n    this.setState({\n      minService : newRating\n    });\n  }  \n  changeVariety(newRating, name)\n  {\n    this.setState({\n      minVariety : newRating\n    });\n  }\n  changePricing(newRating, name)\n  {\n    this.setState({\n      pricing : newRating\n    });\n  }\n\n  render() {\n\n    /* Localization */\n    let strings = new LocalizedStrings({\n      en:{\n        search:\"Search...\",\n        usecommaasaseparator:\"Use comma ( , ) as a separator.\",\n        filter:\"Filter\",\n        includeinsearch:\"Include in search:\",\n        diets: \"Diets\",\n        closeModal:\"Close\",\n        overall:\"Overall rating\",\n        reliability:\"Menu reliability\",\n        service:\"Service & Food\",\n        variety:\"Menu variety\",\n        pricing:\"Pricing\"\n      },\n      fi: {\n        search:\"Hae...\",\n        usecommaasaseparator:\"Käytä pilkkua ( , ) erottimena.\",\n        filter:\"Rajaa\",\n        includeinsearch:\"Sisällytä hakuun:\",\n        diets: \"Ruokavaliot\",\n        closeModal:\"Sulje\",\n        overall:\"Keskiarvo\",\n        reliability:\"Ruokavalion luotettavuus\",\n        service:\"Ruoka ja palvelu\",\n        variety:\"Ruokalajien laajuus\",\n        pricing:\"Hintaluokka\"\n      }\n    });\n    \n    if(typeof this.props.language !== 'undefined'){\n      strings.setLanguage(this.props.language);\n    }\n    else{\n      strings.setLanguage('fi');\n    }\n\n\n    return (\n      <div className=\"searchDiv\">\n        <form id=\"search-form\" className=\"search\" onSubmit={this.login}>\n\n          <input type=\"text\" value={this.state.keywords} onChange={this.handleKeywordChange} className=\"round\" placeholder={strings.search} autoFocus />\n           <button type=\"submit\" className=\"searchBtn\" onClick={this.doSearch}>\n              <FontAwesomeIcon icon=\"search\" />\n          </button>\n\n          <span className=\"instructions\" id=\"instructions-symbol\"> ??? </span>\n           <UncontrolledTooltip placement=\"right\" target=\"instructions-symbol\">\n            {strings.usecommaasaseparator}\n          </UncontrolledTooltip>\n\n          <br />\n\n          <button className=\"filterBtn\" id=\"filter_popover\" onClick={this.toggleModal} type=\"button\" >{strings.filter}</button>\n\n          <Modal isOpen={this.state.modalState} toggle={this.toggleModal} className=\"filterBox\">\n          <ModalHeader>{strings.includeinsearch}</ModalHeader>\n          <ModalBody className=\"filterBox\">\n            {strings.diets}\n            <Select\n              defaultValue={ this.state.defaultValues }\n              isMulti\n              name=\"filtersDrop\"\n              options={ this.state.options }\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n              onChange={this.handleFilterChange}\n            />\n            {strings.overall}\n            <ReactStars\n              value = {this.state.minOverall}\n              count = {5}\n              size = {24}\n              onChange = {this.changeOverall}\n            />\n            {strings.reliability}\n            <ReactStars\n              value = {this.state.minReliability}\n              count = {5}\n              size = {24}\n              onChange = {this.changeReliability}\n            />\n            {strings.service}\n            <ReactStars\n              value = {this.state.minService}\n              count = {5}\n              size = {24}\n              onChange = {this.changeService}\n            />\n            {strings.variety}\n            <ReactStars\n              value = {this.state.minVariety}\n              count = {5}\n              size = {24}\n              onChange = {this.changeVariety}\n            />\n            {strings.pricing}\n            <ReactStars\n              value = {this.state.pricing}\n              count = {3}\n              size = {24}\n              char = '€'\n              half = {false}\n              onChange = {this.changePricing}\n            />\n              \n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggleModal}> {strings.closeModal} </Button>\n          </ModalFooter>\n        </Modal>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}