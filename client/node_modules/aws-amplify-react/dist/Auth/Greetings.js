"use strict";
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var core_1 = require("@aws-amplify/core");
var auth_1 = require("@aws-amplify/auth");
var AuthPiece_1 = require("./AuthPiece");
var Amplify_UI_Components_React_1 = require("../Amplify-UI/Amplify-UI-Components-React");
var Amplify_UI_Theme_1 = require("../Amplify-UI/Amplify-UI-Theme");
var logger = new core_1.ConsoleLogger('Greetings');
var Greetings = /** @class */ (function (_super) {
    __extends(Greetings, _super);
    function Greetings(props) {
        var _this = _super.call(this, props) || this;
        _this.signOut = _this.signOut.bind(_this);
        _this.googleSignOut = _this.googleSignOut.bind(_this);
        _this.facebookSignOut = _this.facebookSignOut.bind(_this);
        _this.state = {
            authState: props.authState,
            authData: props.authData
        };
        return _this;
    }
    Greetings.prototype.componentDidMount = function () {
        this._isMounted = true;
    };
    Greetings.prototype.componentWillUnmount = function () {
        this._isMounted = false;
    };
    Greetings.prototype.signOut = function () {
        var _this = this;
        this.googleSignOut();
        this.facebookSignOut();
        if (!auth_1.default || typeof auth_1.default.signOut !== 'function') {
            throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');
        }
        auth_1.default.signOut()
            .then(function () { return _this.changeState('signedOut'); })
            .catch(function (err) { logger.error(err); _this.error(err); });
    };
    Greetings.prototype.googleSignOut = function () {
        var authInstance = window.gapi && window.gapi.auth2 ? window.gapi.auth2.getAuthInstance() : null;
        if (!authInstance) {
            return Promise.resolve(null);
        }
        authInstance.then(function (googleAuth) {
            if (!googleAuth) {
                logger.debug('google Auth undefined');
                return Promise.resolve(null);
            }
            logger.debug('google signing out');
            return googleAuth.signOut();
        });
    };
    Greetings.prototype.facebookSignOut = function () {
        var fb = window.FB;
        if (!fb) {
            logger.debug('FB sdk undefined');
            return Promise.resolve(null);
        }
        fb.getLoginStatus(function (response) {
            if (response.status === 'connected') {
                return new Promise(function (res, rej) {
                    logger.debug('facebook signing out');
                    fb.logout(function (response) {
                        res(response);
                    });
                });
            }
            else {
                return Promise.resolve(null);
            }
        });
    };
    Greetings.prototype.inGreeting = function (name) { return 'Hello ' + name; };
    Greetings.prototype.outGreeting = function () { return ''; };
    Greetings.prototype.userGreetings = function (theme) {
        var user = this.state.authData;
        var greeting = this.props.inGreeting || this.inGreeting;
        // get name from attributes first
        var nameFromAttr = user.attributes ?
            (user.attributes.name ||
                (user.attributes.given_name ?
                    (user.attributes.given_name + ' ' + user.attributes.family_name) : undefined))
            : undefined;
        var name = nameFromAttr || user.name || user.username;
        var message = (typeof greeting === 'function') ? greeting(name) : greeting;
        return (React.createElement("span", null,
            React.createElement(Amplify_UI_Components_React_1.NavItem, { theme: theme }, message),
            React.createElement(Amplify_UI_Components_React_1.NavButton, { theme: theme, onClick: this.signOut }, core_1.I18n.get('Sign Out'))));
    };
    Greetings.prototype.noUserGreetings = function (theme) {
        var greeting = this.props.outGreeting || this.outGreeting;
        var message = (typeof greeting === 'function') ? greeting() : greeting;
        return message ? React.createElement(Amplify_UI_Components_React_1.NavItem, { theme: theme }, message) : null;
    };
    Greetings.prototype.render = function () {
        var hide = this.props.hide;
        if (hide && hide.includes(Greetings)) {
            return null;
        }
        var authState = this.state.authState;
        var signedIn = (authState === 'signedIn');
        var theme = this.props.theme || Amplify_UI_Theme_1.default;
        var greeting = signedIn ? this.userGreetings(theme) : this.noUserGreetings(theme);
        if (!greeting) {
            return null;
        }
        return (React.createElement(Amplify_UI_Components_React_1.NavBar, { theme: theme },
            React.createElement(Amplify_UI_Components_React_1.Nav, { theme: theme },
                React.createElement(Amplify_UI_Components_React_1.NavRight, { theme: theme }, greeting))));
    };
    return Greetings;
}(AuthPiece_1.default));
exports.default = Greetings;
//# sourceMappingURL=Greetings.js.map