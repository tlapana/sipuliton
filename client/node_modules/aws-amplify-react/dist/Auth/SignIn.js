"use strict";
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var core_1 = require("@aws-amplify/core");
var auth_1 = require("@aws-amplify/auth");
var AuthPiece_1 = require("./AuthPiece");
var FederatedSignIn_1 = require("./FederatedSignIn");
var Amplify_UI_Components_React_1 = require("../Amplify-UI/Amplify-UI-Components-React");
var logger = new core_1.ConsoleLogger('SignIn');
var SignIn = /** @class */ (function (_super) {
    __extends(SignIn, _super);
    function SignIn(props) {
        var _this = _super.call(this, props) || this;
        _this.checkContact = _this.checkContact.bind(_this);
        _this.signIn = _this.signIn.bind(_this);
        _this.onKeyDown = _this.onKeyDown.bind(_this);
        _this._validAuthStates = ['signIn', 'signedOut', 'signedUp'];
        _this.state = {};
        return _this;
    }
    SignIn.prototype.componentDidMount = function () {
        window.addEventListener('keydown', this.onKeyDown);
    };
    SignIn.prototype.componentWillUnmount = function () {
        window.removeEventListener('keydown', this.onKeyDown);
    };
    SignIn.prototype.onKeyDown = function (e) {
        if (this.props.authState === 'signIn' && !this.props.hide) {
            if (e.keyCode === 13) { // when press enter
                this.signIn();
            }
        }
    };
    SignIn.prototype.checkContact = function (user) {
        var _this = this;
        if (!auth_1.default || typeof auth_1.default.verifiedContact !== 'function') {
            throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');
        }
        auth_1.default.verifiedContact(user)
            .then(function (data) {
            if (!core_1.JS.isEmpty(data.verified)) {
                _this.changeState('signedIn', user);
            }
            else {
                user = Object.assign(user, data);
                _this.changeState('verifyContact', user);
            }
        });
    };
    SignIn.prototype.signIn = function () {
        var _this = this;
        var _a = this.inputs, username = _a.username, password = _a.password;
        if (!auth_1.default || typeof auth_1.default.signIn !== 'function') {
            throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');
        }
        auth_1.default.signIn(username, password)
            .then(function (user) {
            logger.debug(user);
            if (user.challengeName === 'SMS_MFA' || user.challengeName === 'SOFTWARE_TOKEN_MFA') {
                logger.debug('confirm user with ' + user.challengeName);
                _this.changeState('confirmSignIn', user);
            }
            else if (user.challengeName === 'NEW_PASSWORD_REQUIRED') {
                logger.debug('require new password', user.challengeParam);
                _this.changeState('requireNewPassword', user);
            }
            else if (user.challengeName === 'MFA_SETUP') {
                logger.debug('TOTP setup', user.challengeParam);
                _this.changeState('TOTPSetup', user);
            }
            else {
                _this.checkContact(user);
            }
        })
            .catch(function (err) {
            if (err.code === 'UserNotConfirmedException') {
                logger.debug('the user is not confirmed');
                _this.changeState('confirmSignUp');
            }
            else if (err.code === 'PasswordResetRequiredException') {
                logger.debug('the user requires a new password');
                _this.changeState('requireNewPassword');
            }
            else {
                _this.error(err);
            }
        });
    };
    SignIn.prototype.showComponent = function (theme) {
        var _this = this;
        var _a = this.props, authState = _a.authState, _b = _a.hide, hide = _b === void 0 ? [] : _b, federated = _a.federated, onStateChange = _a.onStateChange;
        if (hide && hide.includes(SignIn)) {
            return null;
        }
        var hideSignUp = hide.some(function (component) { return component.name === 'SignUp'; });
        var hideForgotPassword = hide.some(function (component) { return component.name === 'ForgotPassword'; });
        return (React.createElement(Amplify_UI_Components_React_1.FormSection, { theme: theme },
            React.createElement(Amplify_UI_Components_React_1.SectionHeader, { theme: theme }, core_1.I18n.get('Sign in to your account')),
            React.createElement(Amplify_UI_Components_React_1.SectionBody, { theme: theme },
                React.createElement(FederatedSignIn_1.FederatedButtons, { federated: federated, theme: theme, authState: authState, onStateChange: onStateChange }),
                React.createElement(Amplify_UI_Components_React_1.FormField, { theme: theme },
                    React.createElement(Amplify_UI_Components_React_1.InputLabel, null,
                        core_1.I18n.get('Username'),
                        " *"),
                    React.createElement(Amplify_UI_Components_React_1.Input, { autoFocus: true, placeholder: core_1.I18n.get('Enter your username'), theme: theme, key: "username", name: "username", onChange: this.handleInputChange })),
                React.createElement(Amplify_UI_Components_React_1.FormField, { theme: theme },
                    React.createElement(Amplify_UI_Components_React_1.InputLabel, null,
                        core_1.I18n.get('Password'),
                        " *"),
                    React.createElement(Amplify_UI_Components_React_1.Input, { placeholder: core_1.I18n.get('Enter your password'), theme: theme, key: "password", type: "password", name: "password", onChange: this.handleInputChange }),
                    !hideForgotPassword && React.createElement(Amplify_UI_Components_React_1.Hint, { theme: theme },
                        core_1.I18n.get('Forget your password? '),
                        React.createElement(Amplify_UI_Components_React_1.Link, { theme: theme, onClick: function () { return _this.changeState('forgotPassword'); } }, core_1.I18n.get('Reset password'))))),
            React.createElement(Amplify_UI_Components_React_1.SectionFooter, { theme: theme },
                React.createElement(Amplify_UI_Components_React_1.SectionFooterPrimaryContent, { theme: theme },
                    React.createElement(Amplify_UI_Components_React_1.Button, { theme: theme, onClick: this.signIn }, core_1.I18n.get('Sign In'))),
                !hideSignUp && React.createElement(Amplify_UI_Components_React_1.SectionFooterSecondaryContent, { theme: theme },
                    core_1.I18n.get('No account? '),
                    React.createElement(Amplify_UI_Components_React_1.Link, { theme: theme, onClick: function () { return _this.changeState('signUp'); } }, core_1.I18n.get('Create account'))))));
    };
    return SignIn;
}(AuthPiece_1.default));
exports.default = SignIn;
//# sourceMappingURL=SignIn.js.map