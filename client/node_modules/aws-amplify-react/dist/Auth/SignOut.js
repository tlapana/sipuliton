"use strict";
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var core_1 = require("@aws-amplify/core");
var auth_1 = require("@aws-amplify/auth");
var AuthPiece_1 = require("./AuthPiece");
var AmplifyUI_1 = require("../AmplifyUI");
var AmplifyTheme_1 = require("../AmplifyTheme");
var logger = new core_1.ConsoleLogger('SignOut');
var SignOut = /** @class */ (function (_super) {
    __extends(SignOut, _super);
    function SignOut(props) {
        var _this = _super.call(this, props) || this;
        _this.signOut = _this.signOut.bind(_this);
        _this.googleSignOut = _this.googleSignOut.bind(_this);
        _this.facebookSignOut = _this.facebookSignOut.bind(_this);
        _this.checkUser = _this.checkUser.bind(_this);
        _this.onHubCapsule = _this.onHubCapsule.bind(_this);
        _this.state = {
            authState: props.authState,
            authData: props.authData
        };
        core_1.Hub.listen('auth', _this);
        return _this;
    }
    SignOut.prototype.componentDidMount = function () {
        this._isMounted = true;
        this.checkUser();
    };
    SignOut.prototype.componentWillUnmount = function () {
        this._isMounted = false;
    };
    SignOut.prototype.signOut = function () {
        var _this = this;
        this.googleSignOut();
        this.facebookSignOut();
        if (!auth_1.default || typeof auth_1.default.signOut !== 'function') {
            throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');
        }
        auth_1.default.signOut()
            .then(function () { return _this.changeState('signedOut'); })
            .catch(function (err) { logger.error(err); _this.error(err); });
    };
    SignOut.prototype.googleSignOut = function () {
        var authInstance = window.gapi && window.gapi.auth2 ? window.gapi.auth2.getAuthInstance() : null;
        if (!authInstance) {
            return Promise.resolve(null);
        }
        authInstance.then(function (googleAuth) {
            if (!googleAuth) {
                logger.debug('google Auth undefined');
                return Promise.resolve(null);
            }
            logger.debug('google signing out');
            return googleAuth.signOut();
        });
    };
    SignOut.prototype.facebookSignOut = function () {
        var fb = window.FB;
        if (!fb) {
            logger.debug('FB sdk undefined');
            return Promise.resolve(null);
        }
        fb.getLoginStatus(function (response) {
            if (response.status === 'connected') {
                return new Promise(function (res, rej) {
                    logger.debug('facebook signing out');
                    fb.logout(function (response) {
                        res(response);
                    });
                });
            }
            else {
                return Promise.resolve(null);
            }
        });
    };
    SignOut.prototype.checkUser = function () {
        var _this = this;
        var that = this;
        var authState = this.state.authState;
        if (!auth_1.default || typeof auth_1.default.currentAuthenticatedUser !== 'function') {
            throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');
        }
        return auth_1.default.currentAuthenticatedUser()
            .then(function (user) {
            if (!that._isMounted) {
                return;
            }
            if (authState !== 'signedIn') {
                _this.setState({
                    authState: 'signedIn',
                    authData: user
                });
                _this.changeState('signedIn', user);
            }
        })
            .catch(function (err) {
            if (!that._isMounted) {
                return;
            }
            if (!authState || authState === 'signedIn') {
                _this.setState({ authState: 'signIn' });
                _this.changeState('signIn');
            }
        });
    };
    SignOut.prototype.onHubCapsule = function (capsule) {
        var channel = capsule.channel, payload = capsule.payload, source = capsule.source;
        if (channel === 'auth' && (payload.event === 'configured' || payload.event === 'cognitoHostedUI')) {
            this.checkUser();
        }
    };
    SignOut.prototype.render = function () {
        var hide = this.props.hide;
        if (hide && hide.includes(SignOut)) {
            return null;
        }
        var authState = this.state.authState;
        var signedIn = (authState === 'signedIn');
        var theme = this.props.theme || AmplifyTheme_1.default;
        if (!signedIn) {
            return null;
        }
        return (React.createElement(AmplifyUI_1.NavButton, { theme: theme, onClick: this.signOut }, core_1.I18n.get('Sign Out')));
    };
    return SignOut;
}(AuthPiece_1.default));
exports.default = SignOut;
//# sourceMappingURL=SignOut.js.map